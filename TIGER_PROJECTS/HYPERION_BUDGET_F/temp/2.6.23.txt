	2.6.23

{% set forecast_type = var("forecast_type", "BUDGET") %}

with
    period_load as (select * from {{ ref("stg_oracle__hyperion_budget_load") }}),
    ecal as (
        select distinct
            month_name, ent_period, ent_period_start_date, ent_period_end_date
        from {{ ref("w_day_d") }}
        where current_ent_year_code = 'Current'
    ),
    w_customer_account_d as (select * from {{ ref("w_customer_account_d") }}),
    cg_count as (
        select
            customer_group, max(party_id) party_id, max(integration_id) integration_id
        from w_customer_account_d
        where customer_group is not null
        group by customer_group
    ),

    w_gl_account_d as (select * from {{ ref("w_gl_account_d") }}),
    w_gl_segment_d as (select * from {{ ref("w_gl_segment_d") }}),
    w_int_org_d as (select * from {{ ref("w_int_org_d") }}),
    w_inventory_product_d as (select * from {{ ref("w_inventory_product_d") }})

-- step 10 to 12 in text file those should be written as macros / pre-hook
-- before this mergr...those co
select
    decode(period_load.currency, 'USDInp', 'USD', period_load.currency) currency,
    ecal.ent_period_end_date,  -- substitue of period in intgration_id
    sales,
    ecal.month_name,
    ecal.ent_period_start_date,
    ecal.ent_period,
    '{{forecast_type}}' forecast_type,

    period_load.customer
    || '~'
    || period_load.gl_location_code
    || '~'
    || period_load.gl_sales_channel_code
    || '~'
    || period_load.gl_brand_code
    || '~'
    || period_load.gl_product_line_code
    || '~'
    || period_load.gl_business_unit_code
    || '~'
    || period_load.gl_company_code
    || '~'
    || period_load.gl_department_code
    || '~'
    || period_load.gl_account_code
    || '~'
    || period_load.sku
    || '~'
    || period_load.organization_id
    || '~'
    || ecal.ent_period_end_date intg_id,
    period_load.gl_account_code,
    case
        when period_load.customer_level = 'customer group'
        then trim(substr(period_load.customer, 5)) = cg_count.customer_group
        else period_load.customer = c.customer_account_number
    end customer_level,
    nvl(na.integration_id::varchar, 0) gl_account_segment_id,
    nvl(br.integration_id::varchar, 0) gl_brand_segment_id
/* nvl(pl.integration_id::varchar, 0) gl_product_line_segment_id,
    nvl(bu.integration_id::varchar, 0) gl_business_unit_segment_id,
    nvl(loc.integration_id::varchar, 0) gl_location_segment_id,
    nvl(c.integration_id::varchar, 0) gl_customer_account_id,
    nvl(ch.integration_id::varchar, 0) gl_channel_segment_id,
    nvl(le.integration_id::varchar, 0) gl_company_segment_id,
    nvl(dp.integration_id::varchar, 0) gl_dept_segment_id,
    nvl(og.organization_id::varchar, 0) inventory_org_id,
    nvl(i.integration_id::varchar, 0) inventory_product_id */
from
    period_load,
    cg_count,
    w_inventory_product_d i,
    w_customer_account_d c,
    ecal,
    w_gl_segment_d na,
    w_gl_segment_d br,
    w_gl_segment_d pl,
    w_gl_segment_d loc,
    w_gl_segment_d bu,
    w_gl_segment_d ch,
    w_gl_segment_d le,
    w_gl_segment_d dp,
    w_int_org_d og

where

    og.integration_id::varchar = period_load.organization_id || '~' || og.datasource_num_id
    and i.integration_id::varchar = period_load.sku_org_id || '~' || i.datasource_num_id
    and i.dbt_valid_to is null
  --  and 'C' || c.customer_account_number = trim(substr(period_load.customer, 5))
    and c.active_flag = 'Y'
    and trim(substr(period_load.customer, 5)) = cg_count.customer_group
    and upper(left(ecal.ent_period, 3)) = period_load.month
    and period_load.gl_account_code <> 'GrossUnits'
    and period_load.currency <> 'CurrInp'
    and na.segment_value_code = period_load.gl_account_code
    and na.segment_name = 'Account'
    and br.segment_value_code = period_load.gl_brand_code
    and br.segment_name = 'Brand'
    and pl.segment_name = 'Product line'
    and pl.segment_value_code = gl_product_line_code
    and loc.segment_name = 'Location'
    and loc.segment_value_code = period_load.gl_sales_channel_code
    and bu.segment_name = 'Business Unit'
    and bu.segment_value_code = period_load.gl_business_unit_code
    and ch.segment_name = 'Channel'
    and ch.segment_value_code = period_load.gl_sales_channel_code
    and le.segment_name in ('Intercompany', 'Company')
    and le.segment_value_code = period_load.gl_company_code
    and dp.segment_name = 'Department'
    and dp.segment_value_code = period_load.gl_department_code
    and period_load.sales <> 0
