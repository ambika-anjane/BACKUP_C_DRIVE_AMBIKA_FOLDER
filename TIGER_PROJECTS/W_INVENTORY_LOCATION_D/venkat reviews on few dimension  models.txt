inventory_location_d (modify)
1. rename mtl_secindary_invent as stg_oracle__secondary_
inventories
2. busn_loc_num is item_loc_num (rename)
3. rename mtl_items_locations as item_locations
4. rename country in stage and keep it as country_code
5. region_1 is county_code
6.CREATED_ON_dATE (UPDATE),KEEP ORDER OF 
W_INSERT_dT, W_UODATE_DT,INTEGRATON_ID,DATASOURCEUM_ID,ALL SHOULD COME TOGETER
UPDATE SUB_INVENTORY_TYPE_COde (not now), AVAIALBILITY_TYPE (TO UODATE)
ase when AVAILABILITY_TYPE = 2 then 'Non Nettable' else 'Nettable' end Availability_type, 
   case when RESERVABLE_TYPE=1 then 'Reservable' else 'Non Reservable' end reservable_type, (COMING FROM MTL_INVENT)

customer_sites :
stage:
gl_id_rev as customer_site_revenue_account_id
(customer_loc_use_d)

ar_collector stage (change it as collector_name , collector_descrption) rename for name,description
change load model as customer_location_use_d


payment_method_d
keep OR in incremental
order_payment_methd (it should be order_paymebt_method) as name
sub_1 (get_payment_method_for_
active_flg (make it as active_flag)	
first 3 stage models has to be removed
use fnd_lookups from database (in orer_payment_method_d)
and 


sales_demand abd trade_balance
-- TO CHECK FOR FIRST UNION ALL (TO JOIN WITH MPO) IS N SDE AND MISSING IN LOAD

-- -- move to yaml file and make transient = true
-- do all thse changes and buld sales_demand_f
-- RENAME COLS IN MFG_LOOKUPS
-- add condition of demand_types to planned_Demand and keep demna d_types if re quired for other conditons
-- cast date in union all and group by (done)
-- remove where's and make it as inner ot lfet outer if it is id = id  (DONE)
-- or else keep it in where (DONE)
-- run all the stage models ()
-- buil load

-- in trade balance
-- stagign  is approved
-- instead of wcfudn_d take stage oz_fund_details_v (remove left outer join)
-- remove fund_detais_batch_update_ second from wc_Claims
-- remove terr_id function from load
-- make tm and fund_period as cte and do the code as per sde
-- then build th model
-- update in dev plan ... for snapshot, wc_claims further enhancement in sprtint 25

-- work done on trade_balance
  -- notes :
  -- all updated as CTE's
  -- i tried using dev_edw still getting some invalid indetifier error need to run that file (wc_claims_f)
  -- right now used stg__claims and using terr_id function in terr_id as I am not able to use that particular load (need to replace that)
   -- renamed w_fund_d and w_trade_funds_f 
  -- included ent_period_start_date and ent_period_end_date
  -- updated mapping doc and unit test doc
  -- incremntal test to confirm with venkat
  -- why format is not seen in dbt UI??

-- stg__claims

-- ozf_reason_codes_all_b as (select * from {{ source("oracle_financials", "ozf_reason_codes_all_b") }}    ),
--  ozf_claim_lines_all as (select * from {{ source('oracle_financials', 'ozf_claim_lines_all') }}),
-- ozf_funds_utilized_all_b as   (select * from {{ ref("stg_oracle__trade_funds_utilizations")}} ),
--- replace source with ref 
-- stg__wc_claims
-- stg__wc_trade_funds
-- lije n 2 and 5 combine and make it as view as stg_oracle__customer_claims (done)
-- line no 3. make it as claim_reasons (done)
-- line no .6 stg_oracle__claim_utilized_funds (done)
-- 8,9,10 replace with corresponding base view (not done)
-- if it is there will make use of it or else recreate 
-- stg__wc_claims to create (to rename)
-- this stage for wc_claims_fact
-- fund in trade_funds not in claims thats possible
-- build wc_Claims

-- stg_trade_funds 
-- replace ref with source
    -- recreate view with the name stg__trade_funds
    -- ozf_fund_Details_v (stg_oracle__trade_funds_utilizations) replace 2 to 4 with ozf_fund_Details_v (with stg_oracle__trade_funds_utilizations view name)
    -- stg__trade_funds join between 10 (view name) and ozf_fund_Details_v
  coalesce(to_char(stg_wc_trade_funds.org_id),'') || '~' || stg_wc_trade_funds._source_id inventory_org_id, -- inventory_og_id
    coalesce(to_char(stg_wc_trade_funds.product_id),'') || '~' || stg_wc_trade_funds._source_id inventory_product_id,-- inventory_product_id
    coalesce(to_char(stg_wc_trade_funds.cust_account_id),'') || '~' || stg_wc_trade_funds._source_id customer_account_id,-- customer_account_id
    coalesce(to_char(stg_wc_trade_funds.price_adjustment_id),'') || '~' || stg_wc_trade_funds._source_id price_adjustment_id,
    coalesce(to_char(stg_wc_trade_funds.bill_to_site_use_id),'') || '~' || stg_wc_trade_funds._source_id bill_to_site_use_id, 
    coalesce(to_char(stg_wc_trade_funds.order_line_id),'') || '~' || stg_wc_trade_funds._source_id sales_order_line_id, -- sales_order_line_id
-- w_trade_fund_utilizations_f rename this fact) as given
-- trade_funds_details (rename this view) and use it in stg_oracle__trade_funds , fact table rename it t0 w_trade_fund_d 
-- w_fund_d should ne renamed as w_trade_fund_d?? or w_trade_funds_f
-- trade_funds_details (rename this view) and use it in stg_oracle__trade_funds , fact table rename it t0 w_trade_fund_d 
-- w_fund_d should ne renamed as w_trade_fund_d??



--- w_trade_funds
-- need to update final cols  (not yet done)


-- hyperion_budget_F
-- need to update this code first, then the file name and then push the code
-- then update dev_plan
-- let me understand the process of hyperion step by step
-- derekk video to go through
-- connect with derek for sampleinputt file


in the ods layer --- hyper 
-- will load he file into hyperion_financial_forecast (to read the file and on the top of it write a view to read the cols)
-- put command to extrernal stage (to load the file)
-- these are the steps to follow in hyperion_budget_F
-- noneed to proceed by seedingsd
