
-- -- move to yaml file and make transient = true
-- do all thse changes and buld sales_demand_f
-- add condition of demand_types to planned_Demand and keep demna d_types if re quired for other conditons
-- cast date in union all and group by (done)
-- remove where's and make it as inner ot lfet outer if it is id = id  (DONE)
-- or else keep it in where (DONE)
-- run all the stage models ()
-- buil load

-- in trade balance
-- stagign  is approved
-- make tm and fund_period as cte and do the code as per sde
-- then build th model

-- update in dev plan ... for snapshot, wc_claims further enhancement in sprtint 25


with

    plan_demand as (select * from dev_discover.SUPPLY_CHAIN.stg_oracle__planned_demand),
    supply_chain_plans  as (
        select * from dev_discover.SUPPLY_CHAIN.stg_oracle__supply_chain_plans
    ),
    organization_plan as (select * from dev_discover.SUPPLY_CHAIN.stg_oracle__organization_plans),  
    supply_chain_demand_types as (select * from dev_discover.SUPPLY_CHAIN.stg_oracle__supply_chain_demand_types),  -- move the join to planned_demand and remove
    msc_system as (select * from dev_ods.oracle_scp.msc_system_items),  
  --  msc_designators as (select * from dev_discover.SUPPLY_CHAIN.stg_oracle__msc_designators), remove
    msd_dp_scn as (
        select * from dev_ods.oracle_scp.msd_dp_scn_entries_denorm
    ),  
    consumed_demand as (select * from dev_discover.SUPPLY_CHAIN.stg_oracle__consumed_demand), 
    oe_order_lines as (select * from dev_discover.ORDER_MGMT.stg_oracle__order_lines),
    oe_order_headers as (select * from dev_discover.ORDER_MGMT.stg_oracle__order_headers),
    mtl_uom_conv as (select * from dev_discover.MASTER_DATA.stg_oracle__item_uom_conversions), 
    shipped_demand as (select * from dev_discover.SUPPLY_CHAIN.stg_oracle__shipped_demand), 
    item_safety_stocks as (
        select * from dev_discover.SUPPLY_CHAIN.stg_oracle__item_saftey_stocks  
    ),

     weekly_forecasted_orgs as (
     SELECT distinct sr_organization_id as sr_organization_id,'Y' AS weekly_flag
          FROM msd_dp_scn
          WHERE start_time >=(current_date()-365)
          AND BUCKET_TYPE   =2
          
    ),

    final as (
        select

            sq_sales_demand_fs.order_type demand_type,
            sq_sales_demand_fs.demand_class demand_class,
            sq_sales_demand_fs.quantity demand_qty,
            sq_sales_demand_fs.sales_date::date sales_date,
            sq_sales_demand_fs.w_update_date::date w_update_date,
            sq_sales_demand_fs.sales_order_number sales_order_number,
            sq_sales_demand_fs.compile_designator plan_name,  
            sq_sales_demand_fs.demand_flag demand_flag,
            sq_sales_demand_fs.weekly_flag weekly_flag,
            sq_sales_demand_fs.daily_cutoff_bucket daily_cutoff_bucket,
            sq_sales_demand_fs.customer_id customer_id,
            sq_sales_demand_fs.organization_id organization_id,
            sq_sales_demand_fs.inventory_item_id inventory_item_id,
            sq_sales_demand_fs.integration_id integration_id,
            'N' Delete_flag,
            sq_sales_demand_fs.datasource_num_id datasource_num_id

        from
            (
       

            (
                    select
                        msc_system.sr_inventory_item_id inventory_item_id,
                        plan_demand.customer_id customer_id,
                        nvl(plan_demand.demand_class, 'NA') demand_class,
                         sum(
                            nvl(
                                plan_demand.daily_demand_rate,
                                plan_demand.using_requirement_quantity
                            )
                        ) quantity,
                        to_date(plan_demand.using_assembly_demand_date) sales_date,
                        to_date(plan_demand.last_update_date) w_update_date,
                        plan_demand.organization_id organization_id,
                           supply_chain_demand_types.demand_source order_type,
                        to_char(
                            substr(
                                plan_demand.order_number,
                                1,
                                regexp_instr(plan_demand.order_number, '.', 1) - 1
                            )
                        ) sales_order_number,
                        supply_chain_plans.plan_name compile_designator,
                        supply_chain_demand_types.demand_source,
                        plan_demand.order_number,
                        supply_chain_plans.plan_name,
                         case
                            when
                                (
                                    (
                                        nvl(
                                            case
                                                when
                                                    plan_demand.organization_id = 1200
                                                    and plan_demand.source_organization_id
                                                    = 1202
                                                then null
                                                else plan_demand.source_organization_id
                                            end,0) > 0
                                        and plan_demand.source_organization_id
                                        <> plan_demand.organization_id
                                    )
                                    or plan_demand.inventory_item_id
                                    <> plan_demand.using_assembly_item_id
                                )
                            then 'N'
                            else 'Y'
                        end
                        demand_flag,
                         nvl(weekly_forecasted_orgs.weekly_flag,'N')as weekly_flag,
                        supply_chain_plans.daily_cutoff_bucket,
                         coalesce(to_char(plan_demand.organization_id), '')
                        || '~'
                        || coalesce(to_char(msc_system.sr_inventory_item_id), '')
                        || '~'
                        || coalesce(to_char(plan_demand.customer_id), '')
                        || '~'
                        || coalesce(to_char(plan_demand.using_assembly_demand_date), '')
                        || '~'
                        || coalesce(to_char(plan_demand.last_update_date), '')
                        || '~'
                        || coalesce(to_char(supply_chain_demand_types.demand_source), '')
                        || '~'
                        || coalesce(to_char(plan_demand.demand_class), '')
                        || '~'
                        || coalesce(to_char(plan_demand.order_number), '')
                        || '~'
                        || coalesce(to_char(supply_chain_plans.plan_name), '')
                        || to_char(plan_demand._source_id) integration_id,
                        plan_demand._source_id datasource_num_id

                    
                    
              

                    
                  
                    from plan_demand left outer join weekly_forecasted_orgs
                    on plan_demand.organization_id = weekly_forecasted_orgs.sr_organization_id
                    inner join msc_system
                    on msc_system.sr_instance_id = plan_demand.sr_instance_id
                    and msc_system.inventory_item_id = plan_demand.inventory_item_id
                    and msc_system.organization_id = plan_demand.organization_id
                    and msc_system.plan_id = plan_demand.plan_id
                    inner join supply_chain_plans
                    on supply_chain_plans.plan_id = plan_demand.plan_id
                    inner join supply_chain_demand_types
                    on plan_demand.demand_source = supply_chain_demand_types.demand_source_code

                      group by
                        msc_system.sr_inventory_item_id,
                        plan_demand.customer_id,
                        plan_demand.using_assembly_demand_date,-- keep it with cast
                        plan_demand.demand_class,
                        plan_demand.last_update_date,
                        plan_demand.organization_id,
                        supply_chain_demand_types.demand_source,
                        plan_demand.order_number,
                        supply_chain_plans.plan_name,
                         case
                            when
                                (
                                    (
                                        nvl(
                                            case
                                                when
                                                    plan_demand.organization_id = 1200
                                                    and plan_demand.source_organization_id
                                                    = 1202
                                                then null
                                                else plan_demand.source_organization_id
                                            end,0) > 0
                                        and plan_demand.source_organization_id
                                        <> plan_demand.organization_id
                                    )
                                    or plan_demand.inventory_item_id
                                    <> plan_demand.using_assembly_item_id
                                )
                            then 'N'
                            else 'Y'
                        end,
                         weekly_forecasted_orgs.weekly_flag,
                        supply_chain_plans.daily_cutoff_bucket,
                        plan_demand._source_id
            )
                       
                   ) sq_sales_demand_fs
        where (1 = 1)

                
        
    )

      select *  from final 
    
