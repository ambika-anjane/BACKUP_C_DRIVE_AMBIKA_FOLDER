with

    plan_demand as (select * from dev_discover.SUPPLY_CHAIN.stg_oracle__planned_demand),
    supply_chain_plans  as (
        select * from dev_discover.SUPPLY_CHAIN.stg_oracle__supply_chain_plans
    ),
    organization_plan as (select * from dev_discover.SUPPLY_CHAIN.stg_oracle__organization_plans),  -- organization_plans
    supply_chain_demand_types as (select * from dev_discover.SUPPLY_CHAIN.stg_oracle__supply_chain_demand_types),  -- supply_chain_demand_types and i need to rename the cols code as demand
    msc_system as (select * from dev_ods.oracle_scp.msc_system_items),  -- refer to base table no need of view
    msc_designators as (select * from dev_discover.SUPPLY_CHAIN.stg_oracle__msc_designators),
    msd_dp_scn as (
        select * from dev_ods.oracle_scp.msd_dp_scn_entries_denorm
    ),  -- DIRECTLY USE TABLE INSTEAD OF VIEW
    -- in the cte going to create i need to mention msd_dp_scn
    consumed_demand as (select * from dev_discover.SUPPLY_CHAIN.stg_oracle__consumed_demand),  -- consumed_demand  stage name) (msc_fore_upd)
    oe_order_lines as (select * from dev_discover.ORDER_MGMT.stg_oracle__order_lines),
    oe_order_headers as (select * from dev_discover.ORDER_MGMT.stg_oracle__order_headers),
    mtl_uom_conv as (select * from dev_discover.MASTER_DATA.stg_oracle__item_uom_conversions),  -- item_uom_conversions
    shipped_demand as (select * from dev_discover.SUPPLY_CHAIN.stg_oracle__shipped_demand),  -- shipped_demand
    item_safety_stocks as (
        select * from dev_discover.SUPPLY_CHAIN.stg_oracle__item_saftey_stocks  -- item_safety_stocks 
    ),

    weekly_forecasted_orgs as (
     SELECT distinct sr_organization_id as sr_organization_id
          FROM oracle_scp.msd_dp_scn_entries_denorm
          WHERE start_time >=(current_date()-365)
          AND BUCKET_TYPE   =2
              ),

    final as (
        select

            sq_sales_demand_fs.order_type demand_type,
            sq_sales_demand_fs.demand_class demand_class,
            sq_sales_demand_fs.quantity demand_qty,
            sq_sales_demand_fs.w_update_date w_update_date,
            sq_sales_demand_fs.due_date due_date,
            sq_sales_demand_fs.sales_order_number sales_order_number,
            sq_sales_demand_fs.compile_designator plan_name,  -- in staging view of msc_plans i need to rename  (done)
            sq_sales_demand_fs.demand_flag demand_flag,
            sq_sales_demand_fs.weekly_flag weekly_flag,
            sq_sales_demand_fs.daily_cutoff_bucket daily_cutoff_bucket,
            sq_sales_demand_fs.customer_id customer_id,
            sq_sales_demand_fs.organization_id organization_id,
            sq_sales_demand_fs.inventory_item_id inventory_item_id,
            sq_sales_demand_fs.integration_id integration_id,
            sq_sales_demand_fs.delete_flag delete_flag,
            sq_sales_demand_fs.datasource_num_id datasource_num_id

        from
            (

                (
                    select
                        msc_system.sr_inventory_item_id inventory_item_id,
                        plan_demand.customer_id customer_id,
                        plan_demand.using_assembly_demand_date due_date,
                        nvl(plan_demand.demand_class, 'NA') demand_class,
                        sum(
                            nvl(
                                plan_demand.daily_demand_rate,
                                plan_demand.using_requirement_quantity
                            )
                        ) quantity,
                        plan_demand.last_update_date  w_update_date,
                    
                        plan_demand.organization_id organization_id,
                        supply_chain_demand_types.demand_type order_type,
                        to_char(
                            substr(
                                plan_demand.order_number,
                                1,
                                regexp_instr(plan_demand.order_number, '.', 1) - 1
                            )
                        ) sales_order_number,
                        supply_chain_plans.plan_name compile_designator,
                        case
                            when
                                (
                                    (
                                        nvl(
                                            case
                                                when
                                                    plan_demand.organization_id = 1200
                                                    and plan_demand.source_organization_id
                                                    = 1202
                                                then null
                                                else plan_demand.source_organization_id
                                            end,
                                            0
                                        )
                                        > 0
                                        and plan_demand.source_organization_id
                                        <> plan_demand.organization_id
                                    )
                                    or plan_demand.inventory_item_id
                                    <> plan_demand.using_assembly_item_id
                                )
                            then 'N'
                            else 'Y'
                        end demand_flag,  -- added to exlcude component item demand used for make items, and do not apply org dependent logic for dop items in dtx
                        CASE
                        WHEN supply_chain_demand_types.demand_type         ='Forecast'
                        then 'Y'
                        else 'N'
                        end weekly_flag,
                        'N' delete_flag,
                        supply_chain_plans.daily_cutoff_bucket,
                        coalesce(to_char(msc_system.sr_inventory_item_id), '')
                        || '~'
                        || coalesce(to_char(plan_demand.customer_id), '')
                        || '~'
                        || coalesce(to_char(plan_demand.using_assembly_demand_date), '')
                        || '~'
                        || coalesce(to_char(supply_chain_demand_types.demand_type), '')
                        || '~'
                        || coalesce(to_char(plan_demand.organization_id), '')
                        || '~'
                        || to_char(plan_demand._source_id) integration_id,
                        plan_demand._source_id datasource_num_id

                    -- add due_date and plan_name in integration_id (in all the id's)
                    from plan_demand  left outer join weekly_forecasted_orgs
                   on plan_demand.organization_id = weekly_forecasted_orgs.sr_organization_id
                  ,supply_chain_plans, msc_system, organization_plan,supply_chain_demand_types
                  
                    where 
                        (1 = 1)
                        and organization_plan.plan_id = plan_demand.plan_id
                        and organization_plan.organization_id
                        = plan_demand.organization_id
                        and organization_plan.sr_instance_id
                        = plan_demand.sr_instance_id
                        and (plan_demand.using_requirement_quantity > 0)
                        and (
                            supply_chain_demand_types.demand_type in (
                                'Forecast',
                                'Payback Demand',
                                'Planned order demand',
                                'Interorganization Demand',
                                'Sales Orders',
                                'Work order demand',
                                'Safety Stock Demand'
                            )
                        )
                        and (supply_chain_plans.plan_id = plan_demand.plan_id)
                        and (
                            supply_chain_plans.plan_name in (
                                select designator
                                from msc_designators
                                where disable_date is null
                            )
                        )  -- add this condition in msc_plan view and (designtor) will go in one view (this cond remove from here) wherver in this code
                        and (msc_system.plan_id = supply_chain_plans.plan_id)
                        and (
                            msc_system.sr_instance_id = plan_demand.sr_instance_id
                            and plan_demand.inventory_item_id
                            = msc_system.inventory_item_id
                            and msc_system.organization_id = plan_demand.organization_id
                            and msc_system.plan_id = plan_demand.plan_id
                        )
                        and (
                            plan_demand.origination_type
                            = supply_chain_demand_types.demand_type_code
                        )
                    group by
                        msc_system.sr_inventory_item_id,
                        plan_demand.customer_id,
                        plan_demand.using_assembly_demand_date,
                        nvl(plan_demand.demand_class, 'NA'),
                        plan_demand.last_update_date,
                        plan_demand.organization_id,
                        supply_chain_demand_types.demand_type,
                        substr(
                            plan_demand.order_number,
                            1,
                            regexp_instr(plan_demand.order_number, '.', 1) - 1
                        ),
                        supply_chain_plans.plan_name,
                        case
                            when
                                (
                                    (
                                        nvl(
                                            case
                                                when
                                                    plan_demand.organization_id = 1200
                                                    and plan_demand.source_organization_id
                                                    = 1202
                                                then null
                                                else plan_demand.source_organization_id
                                            end,
                                            0
                                        )
                                        > 0
                                        and plan_demand.source_organization_id
                                        <> plan_demand.organization_id
                                    )
                                    or plan_demand.inventory_item_id
                                    <> plan_demand.using_assembly_item_id
                                )
                            then 'N'
                            else 'Y'
                        end,
                        delete_flag,
                        supply_chain_plans.daily_cutoff_bucket,
                        plan_demand._source_id

                )
                

            ) sq_sales_demand_fs
        where (1 = 1)

    ),

    sub_final as (
        select
            fs.demand_type,
            fs.demand_class,
            fs.demand_qty,
            fs.w_update_date,
            fs.due_date,
            fs.sales_order_number,
            fs.plan_name,
            fs.demand_flag,
            fs.weekly_flag,
            fs.daily_cutoff_bucket,
            nvl(
                fs.customer_id::varchar || '~' || fs.datasource_num_id::varchar, '0'
            ) customer_id,
            nvl(
                fs.inventory_item_id::varchar || '~' || fs.datasource_num_id::varchar,
                '0'
            ) inventory_item_id,
            nvl(
                fs.organization_id::varchar || '~' || fs.datasource_num_id::varchar, '0'
            ) organization_id,
            fs.delete_flag,
            fs.integration_id,
            fs.datasource_num_id
        from final fs
    )
select
    *,
9999::number(32)  etl_proc_id
    
from
    sub_final 

    -- to confirm imtegrtion_id
    -- can i keep logic and id's in staging itself istead of mainitaining staging (no
    -- staging) only load
    -- primary table which one? msc_demands
    -- w_update_date and w_update_dt (for wh field)
    -- weekly flsg for first union all taking long time (logic redesigned)
    -- demand class coming as NA
    -- take put the incremetnal logic from load
    -- source and target count should  check for each union all count (finally check
    -- for msc_demands union all)
    -- get consumption report (giva an item number,org-number) for the month of april
    -- and validate with target table , bi11g table and check for the dates
    -- done's:
    -- in sales_invoice_lines_f (mtl_uom_conv) stage to rename as item_uom_conv and
    -- agin build the model (done)
    -- SQ_SALES_DEMAND_FS.COMPILE_DESIGNATOR	   PLAN_NAME, -- in staging view of
    -- msc_plans i need to rename  (done)
    -- supply_chain_plans and planned_demand created and updated those names in model
    -- remove this cond here and add in base view of mfg_lookup in line no.111
    -- mfg_lookups renamed to supply_chain_demand_types and renaming the cols done (3
    -- cols) it is built
    -- msc_system redirected to base table in snowflake 
    -- msc_designators as it is
    -- msd_dp_scn redirected to base table
    -- stg_oracle__msc_forecast_updates renamed as consumed demand
    -- mtl_system id fields changed and inner join removed with oe_order_lines and
    -- removed that staging
    -- mtl_param staging removed and inner join removed 
    -- mtl_uom renamed a item_uom
    -- msc_sales_orders got renamed and updated in the code
    -- one more table , one cte to be created, integration_id to update thats all in
    -- this model
    -- tempo to be updated
    	