with
    msc_demand as (select * from dev_discover.SUPPLY_CHAIN.stg_oracle__msc_demands),
    msc_plan as (select * from dev_discover.SUPPLY_CHAIN.stg_oracle__msc_plans),
    mpo as (select * from dev_discover.SUPPLY_CHAIN.stg_oracle__mpo),
    mfg_look as (select * from dev_discover.FINANCIALS.stg_oracle__mfg_lookups),
    msc_system as (select * from dev_discover.SUPPLY_CHAIN.stg_oracle__msc_system_items),
    msc_designators as (select * from dev_discover.SUPPLY_CHAIN.stg_oracle__msc_designators),
    msc_dp_scn as (select * from dev_discover.SUPPLY_CHAIN.stg_oracle__msc_dp_scn),
    msc_fore_upd as (select * from dev_discover.SUPPLY_CHAIN.stg_oracle__msc_forecast_updates),
    mtl_system as (select * from dev_discover.MASTER_DATA.stg_oracle__mtl_system_items),
    oe_order_lines as (select * from dev_discover.ORDER_MGMT.stg_oracle__order_lines),
    oe_order_headers as (select * from dev_discover.ORDER_MGMT.stg_oracle__order_headers),
    mtl_uom_conv as (select * from dev_discover.MASTER_DATA.stg_oracle__mtl_uom_conversions),   
    mtl_param as (select * from dev_discover.MASTER_DATA.stg_oracle__mtl_parameters),
    msc_sales_ord as (select * from dev_discover.SUPPLY_CHAIN.stg_oracle__msc_sales_orders),
    msc_safety_stocks as (select * from dev_discover.SUPPLY_CHAIN.stg_oracle__msc_safety_stocks),



final as(
    select	
	
	SQ_SALES_DEMAND_FS.ORDER_TYPE	   C1_DEMAND_TYPE,
	SQ_SALES_DEMAND_FS.DEMAND_CLASS	   C2_DEMAND_CLASS,
	SQ_SALES_DEMAND_FS.QUANTITY	   C3_DEMAND_QTY,
	SQ_SALES_DEMAND_FS.W_UPDATE_DT	   C4_W_UPDATE_DT,
	SQ_SALES_DEMAND_FS.DUE_DATE	   C5_DUE_DATE,
	SQ_SALES_DEMAND_FS.SALES_ORDER_NUMBER	   C6_SALES_ORDER_NUMBER,
	SQ_SALES_DEMAND_FS.COMPILE_DESIGNATOR	   C7_PLAN_NAME,
	SQ_SALES_DEMAND_FS.DEMAND_FLAG	   C8_DEMAND_FLAG,
	SQ_SALES_DEMAND_FS.WEEKLY_FLAG	   C9_WEEKLY_FLAG,
	SQ_SALES_DEMAND_FS.DAILY_CUTOFF_BUCKET	   C10_DAILY_CUTOFF_BUCKET,
	SQ_SALES_DEMAND_FS.CUSTOMER_ID	   C11_CUSTOMER_ID,
	SQ_SALES_DEMAND_FS.ORGANIZATION_ID	   C12_ORGANIZATION_ID,
	SQ_SALES_DEMAND_FS.INVENTORY_ITEM_ID	   C13_INVENTORY_ITEM_ID,	
    SQ_SALES_DEMAND_FS.INTEGRATION_ID	   INTEGRATION_ID
  


    from 
 
   
        
            (select
                msc_system.sr_inventory_item_id inventory_item_id,
                msc_demand.customer_id customer_id,
                to_date(msc_demand.using_assembly_demand_date) due_date,
                nvl(msc_demand.demand_class, 'NA') demand_class,
                sum(
                    nvl(
                        msc_demand.daily_demand_rate,
                        msc_demand.using_requirement_quantity
                    )
                ) quantity,
                to_date(msc_demand.last_update_date) w_update_dt,
                msc_demand.organization_id organization_id,
                mfg_look.meaning order_type,
                to_char(
                    substr(
                        msc_demand.order_number,
                        1,
                        regexp_instr(msc_demand.order_number, '.', 1) - 1
                    )
                ) sales_order_number,
                msc_plan.compile_designator compile_designator,
                case
                    when
                        (
                            (
                                nvl(
                                    case
                                        when
                                            msc_demand.organization_id = 1200
                                            and msc_demand.source_organization_id = 1202
                                        then null
                                        else msc_demand.source_organization_id
                                    end,
                                    0
                                )
                                > 0
                                and msc_demand.source_organization_id
                                <> msc_demand.organization_id
                            )
                            or msc_demand.inventory_item_id
                            <> msc_demand.using_assembly_item_id
                        )
                    then 'N'
                    else 'Y'
                end demand_flag,  -- added to exlcude component item demand used for make items, and do not apply org dependent logic for dop items in dtx
                case
                    when
                        mfg_look.meaning = 'Forecast'
                        and msc_demand.organization_id in (
                            select sr_organization_id
                            from msc_dp_scn
                            where
                                start_time >= (current_date() - 365) and bucket_type = 2
                        )
                    then 'Y'
                    else 'N'
                 end weekly_flag,
                'N' Delete_Flag,
                 msc_plan.daily_cutoff_bucket,
                 coalesce(to_char(msc_system.sr_inventory_item_id), '')||'~'||to_char(msc_demand._source_id) integration_id,
                 to_char(msc_demand._source_id) datasource_num_id

             
            from msc_demand, msc_plan, msc_system, mfg_look, mpo

            where
                (1 = 1)
                and mpo.plan_id = msc_demand.plan_id
                and mpo.organization_id = msc_demand.organization_id
                and mpo.sr_instance_id = msc_demand.sr_instance_id
                and (mfg_look.lookup_type = 'MSC_DEMAND_ORIGINATION')
                and (msc_demand.using_requirement_quantity > 0)
                and (
                    mfg_look.meaning in (
                        'Forecast',
                        'Payback Demand',
                        'Planned order demand',
                        'Interorganization Demand',
                        'Sales Orders',
                        'Work order demand',
                        'Safety Stock Demand'
                    )
                )
                and (msc_plan.plan_id = msc_demand.plan_id)
                and (
                    msc_plan.compile_designator in (
                        select designator
                        from msc_designators
                        where disable_date is null
                    )
                )
                and (msc_system.plan_id = msc_plan.plan_id)
                and (
                    msc_system.sr_instance_id = msc_demand.sr_instance_id
                    and msc_demand.inventory_item_id = msc_system.inventory_item_id
                    and msc_system.organization_id = msc_demand.organization_id
                    and msc_system.plan_id = msc_demand.plan_id
                )
                and (msc_demand.origination_type = mfg_look.lookup_code)
            group by
                msc_system.sr_inventory_item_id,
                msc_demand.customer_id,
                to_date(msc_demand.using_assembly_demand_date),
                nvl(msc_demand.demand_class, 'NA'),
                to_date(msc_demand.last_update_date),
                msc_demand.organization_id,
                mfg_look.meaning,
                substr(
                    msc_demand.order_number,
                    1,
                    regexp_instr(msc_demand.order_number, '.', 1) - 1
                ),
                msc_plan.compile_designator,
                case
                    when
                        (
                            (
                                nvl(
                                    case
                                        when
                                            msc_demand.organization_id = 1200
                                            and msc_demand.source_organization_id = 1202
                                        then null
                                        else msc_demand.source_organization_id
                                    end,
                                    0
                                )
                                > 0
                                and msc_demand.source_organization_id
                                <> msc_demand.organization_id
                            )
                            or msc_demand.inventory_item_id
                            <> msc_demand.using_assembly_item_id
                        )
                    then 'N'
                    else 'Y'
                end,
                Delete_Flag,
                msc_plan.daily_cutoff_bucket,
                coalesce(to_char(msc_system.sr_inventory_item_id), '')||'~'||to_char(msc_demand._source_id),
                to_char(msc_demand._source_id)
             
             union all
      (
            select
                msc_system.sr_inventory_item_id inventory_item_id,
                msc_fore_upd.customer_id customer_id,
                TO_TIMESTAMP_NTZ(TO_VARCHAR(msc_fore_upd.consumption_date)) due_date,
                nvl(msc_fore_upd.demand_class, 'NA') demand_class,
                sum(msc_fore_upd.consumed_qty) quantity,
                TO_TIMESTAMP_NTZ(TO_VARCHAR(msc_fore_upd.last_update_date)) w_update_dt,
                msc_fore_upd.organization_id organization_id,
        
        'Consumption' order_type,
        
                to_char(
                    substr(
                        msc_fore_upd.sales_order_number,
                        1,
                        regexp_instr(msc_fore_upd.sales_order_number, '.', 1) - 1
                    )
                ) sales_order_number,
        
                msc_plan.compile_designator compile_designator,
        
                'Y' as demand_flag,
        
                'N' as weekly_flag,
                'N' Delete_flag,
                 msc_plan.daily_cutoff_bucket,
                 coalesce(to_char(msc_system.sr_inventory_item_id), '')||'~'||to_char(msc_plan._source_id) integration_id,
                 to_char(msc_plan._source_id) datasource_num_id
                
                
            from msc_plan, msc_system, msc_fore_upd, mpo
            where
                (1 = 1)
                and mpo.plan_id = msc_fore_upd.plan_id
                and mpo.organization_id = msc_fore_upd.organization_id
                and mpo.sr_instance_id = msc_fore_upd.sr_instance_id
                and (msc_fore_upd.consumed_qty > 0)
                and (msc_plan.plan_id = msc_system.plan_id)
                and (
                    msc_plan.compile_designator in (
                        select designator
                        from msc_designators
                        where disable_date is null
                    )
                )
                and (
                    msc_system.inventory_item_id = msc_fore_upd.inventory_item_id
                    and msc_system.organization_id = msc_fore_upd.organization_id
                )
                and (msc_plan.plan_id = msc_fore_upd.plan_id)

                
            group by
                msc_system.sr_inventory_item_id,
                msc_fore_upd.customer_id,
               TO_TIMESTAMP_NTZ(TO_VARCHAR(msc_fore_upd.consumption_date)),
                nvl(msc_fore_upd.demand_class, 'NA'),
                TO_TIMESTAMP_NTZ(TO_VARCHAR(msc_fore_upd.last_update_date)),
                msc_fore_upd.organization_id,
                 order_type,
         substr(
                    msc_fore_upd.sales_order_number,
                    1,
                    regexp_instr(msc_fore_upd.sales_order_number, '.', 1) - 1
                ),
                        msc_plan.compile_designator,
        demand_flag,
        weekly_flag,
        Delete_Flag,
        msc_plan.daily_cutoff_bucket,
        coalesce(to_char(msc_system.sr_inventory_item_id), '')||'~'||to_char(msc_plan._source_id),
        to_char(msc_plan._source_id)
      )

             
      
             union all
      (
            select
                mtl_system.inventory_item_id inventory_item_id,
                oe_order_lines.customer_account_id customer_id,
                to_date(oe_order_lines.request_date) due_date,
                nvl(oe_order_lines.demand_class_code, 'NA') demand_class,
                sum(
                    oe_order_lines.ordered_quantity
                    * nvl(mtl_uom_conv.conversion_rate, 1)
                ) quantity,
                to_date(oe_order_lines.last_update_date) w_update_dt,
                mtl_system.organization_id organization_id,
                'Unschedule' order_type,
                to_char(oe_order_headers.order_number) sales_order_number,
                'NA' compile_designator,
                'Y' as demand_flag,
                'N' as weekly_flag,
                'N' Delete_flag,
                 coalesce(to_char(mtl_system.inventory_item_id), '')||'~'||to_char(oe_order_lines._source_id) integration_id,
                 oe_order_lines._source_id datasource_num_id,
               0
            from mtl_uom_conv
            right outer join
                (
                    (
                        (
                            oe_order_lines
                            inner join
                                mtl_system
                                on oe_order_lines.inventory_item_id
                                = mtl_system.inventory_item_id
                                and oe_order_lines.ship_from_org_id
                                = mtl_system.organization_id
                        )
                        inner join
                            oe_order_headers
                            on oe_order_lines.order_header_id
                            = oe_order_headers.order_header_id
                    )
                    inner join
                        mtl_param
                        on oe_order_lines.ship_from_org_id = mtl_param.organization_id
                )
                on mtl_uom_conv.inventory_item_id = oe_order_lines.inventory_item_id
                and mtl_uom_conv.uom_code = oe_order_lines.order_quantity_uom
            where
                (1 = 1)
                and (
                    oe_order_lines.flow_status_code in ('BOOKED', 'ENTERED')
                    and oe_order_lines.open_flag = 'Y'
                    and oe_order_lines.line_category_code = 'ORDER'
                )
                
            group by
                mtl_system.inventory_item_id,
                oe_order_lines.customer_account_id,
                oe_order_lines.request_date,
                nvl(oe_order_lines.demand_class_code, 'NA'),
                oe_order_lines.last_update_date,
                mtl_system.organization_id,
                to_char(oe_order_headers.order_number),
                integration_id,
                oe_order_lines._source_id
          
        )
             
             union all
             
             (
            select
                msc_system.sr_inventory_item_id inventory_item_id,
                msc_sales_ord.customer_id customer_id,
                to_date(oe_order_lines.actual_shipment_date) due_date,
                nvl(msc_sales_ord.demand_class, 'NA') demand_class,
                sum(msc_sales_ord.completed_quantity) quantity,
                 to_date(msc_sales_ord.last_update_date) w_update_dt,
                msc_sales_ord.organization_id organization_id,
                'Shipped' order_type,
                to_char(
                    substr(
                        msc_sales_ord.sales_order_number,
                        1,
                        regexp_instr(msc_sales_ord.sales_order_number, '.', 1) - 1
                    )
                ) sales_order_number,
                msc_plan.compile_designator compile_designator,
                'Y' as demand_flag,
                'N' as weekly_flag,
                'N' AS Delete_flag,
               coalesce(to_char(msc_system.inventory_item_id), '')||'~'||to_char(oe_order_lines._source_id) integration_id,
                oe_order_lines._source_id datasource_num_id,

                msc_plan.daily_cutoff_bucket

                
            from msc_system, msc_sales_ord, msc_plan, oe_order_lines
            where
                (1 = 1)
                and (
                    msc_sales_ord.demand_id in (
                        select distinct sales_order_id
                        from msc_fore_upd m, msc_system i
                        where
                            m.inventory_item_id = i.inventory_item_id
                            and m.organization_id = i.organization_id
                            and m.plan_id = i.plan_id
                    )
                )
                and msc_sales_ord.demand_source_line = oe_order_lines.order_line_id
                and (msc_sales_ord.completed_quantity > 0)
                and (
                    msc_system.inventory_item_id = msc_sales_ord.inventory_item_id
                    and msc_system.organization_id = msc_sales_ord.organization_id
                )
                and (msc_plan.plan_id = msc_system.plan_id and msc_system.plan_id <> -1)
                and (
                    msc_plan.compile_designator in (
                        select designator
                        from msc_designators
                        where disable_date is null
                    )
                )
                     
            group by
                msc_system.sr_inventory_item_id,
                msc_sales_ord.customer_id,
                oe_order_lines.actual_shipment_date,
                msc_sales_ord.requirement_date,
                nvl(msc_sales_ord.demand_class, 'NA'),
                 msc_sales_ord.last_update_date,
                msc_sales_ord.organization_id,
                substr(
                    msc_sales_ord.sales_order_number,
                    1,
                    regexp_instr(msc_sales_ord.sales_order_number, '.', 1) - 1
                ),
                msc_plan.compile_designator,
                 msc_plan.daily_cutoff_bucket,
                 integration_id,
                 oe_order_lines._source_id

                
        )
             
             union all
             
             (
            select
                msi.sr_inventory_item_id inventory_item_id,
                null customer_id,
                TO_TIMESTAMP_NTZ(TO_VARCHAR(mss.period_start_date)) due_date,
                'NA' demand_class,
                mss.safety_stock_quantity quantity,
                TO_TIMESTAMP_NTZ(TO_VARCHAR(mss.last_update_date)) w_update_dt,
                mss.organization_id,
                'Safety Stock' order_type,
                null sales_order_number,
                msc.compile_designator compile_designator,
                'N' demand_flag,
                'N' weekly_flag,
                'N' AS Delete_flag,
                msc.daily_cutoff_bucket,
               coalesce(to_char(msi.sr_inventory_item_id), '')||'~'||to_char(mss._source_id) integration_id,
               to_char(mss._source_id) datasource_num_id

            from msc_safety_stocks mss, msc_system msi, msc_plan msc
            where
                mss.sr_instance_id = msi.sr_instance_id
                and mss.inventory_item_id = msi.inventory_item_id
                and mss.organization_id = msi.organization_id
                and mss.plan_id = msi.plan_id
                and msi.plan_id = msc.plan_id
                and (
                    msc.compile_designator in (
                        select designator
                        from msc_designators
                        where disable_date is null
                    )
                )
                   
        )
             union all
             (
           
            select
                ola.inventory_item_id inventory_item_id,
                ola.customer_account_id customer_id,
                (
                    coalesce(
                        ola.latest_acceptable_date, ola.schedule_ship_date, '1900-01-01'
                    )
                ) c30_due_date,
                nvl(ola.demand_class_code, 'NA') c31_demand_class,
                sum(ola.ordered_quantity * nvl(muc.conversion_rate, 1)) c32_quantity,  -- UOM Conversion required
                trunc(ola.last_update_date, 'MM') c33_w_update_dt,
                ola.ship_from_org_id organization_id,
                'Sales Orders - LAD' c8_order_type,
                to_char(oha.order_number) c35_sales_order_number,
                'GLOBAL' c19_compile_designator,
                'Y' as demand_flag,
                'N' as weekly_flag,
                 'N' Delete_flag,
                  coalesce(to_char(ola.inventory_item_id), '')||'~'||(ola._source_id) integration_id,
                  ola._source_id datasource_num_id,
                   0 daily_cutoff_bucket
                 
            from oe_order_lines ola, oe_order_headers oha, mtl_uom_conv muc
            where
                (1 = 1)
                and ola.order_header_id = oha.order_header_id
                and ola.open_flag = 'Y'
                and oha.open_flag = 'Y'
                and ola.order_source_id <> 10
                and ola.line_category_code = 'ORDER'
                and muc.inventory_item_id(+) = ola.inventory_item_id
                and muc.uom_code(+) = ola.order_quantity_uom
              
            group by
                ola.inventory_item_id,
                ola.customer_account_id,
                (
                    coalesce(
                        ola.latest_acceptable_date, ola.schedule_ship_date, '1900-01-01'
                    )
                ),
                nvl(ola.demand_class_code, 'NA'),
                trunc(ola.last_update_date, 'MM'),
                ola.ship_from_org_id,
                oha.order_number,
                 ola._source_id
        )





      
        
    ) SQ_SALES_DEMAND_FS 
    where (1=1)

),

sub_final as (
select 
  
C1_DEMAND_TYPE,
C2_DEMAND_CLASS,
C3_DEMAND_QTY,
C4_W_UPDATE_DT,
C5_DUE_DATE,
C6_SALES_ORDER_NUMBER,
C7_PLAN_NAME,
C8_DEMAND_FLAG,
TO_VARCHAR(C9_WEEKLY_FLAG),
TO_VARCHAR(C10_DAILY_CUTOFF_BUCKET)
--C11_CUSTOMER_ID
--INTEGRATION_ID::VARCHAR


from final 
)  
  select * from sub_final limit 10

