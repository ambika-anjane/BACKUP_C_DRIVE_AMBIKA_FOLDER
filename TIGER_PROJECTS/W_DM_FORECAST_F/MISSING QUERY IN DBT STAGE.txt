queries taken out to check condition in final table

1.  ,nvl(TO_CHAR(nvl(hca.cust_account_id,(select max(hca1.cust_account_id) from hca1,hp where hp.party_id = hca1.party_id and hca1.status = ''A'' and hp.status = ''A''
            and UPPER(TRIM(SUBSTR(ea.EBS_ACCOUNT,1,INSTR(ea.EBS_ACCOUNT,'':'',-1)-1))) = UPPER(hp.PARTY_NAME))))
 ,cc.e1_cust_cat_2) customer_acct_id
in query 1 (replae ea with cust_lob_group)

2. ,nvl(hca.cust_account_id,(select max(hca1.cust_account_id) from apps.hz_cust_accounts hca1, apps.hz_parties hp where hp.party_id = hca1.party_id and hca1.status = ''a'' and hp.status = ''a''
          and upper(trim(substr(ea.ebs_account,1,instr(ea.ebs_account,'':'',-1)-1))) = upper(hp.party_name))) customer_account_id_n

remove query 2 


3. ,'||v_uplift||')) uplift_future (line no .131)


 select location_id, item_id, sales_date, sum(nvl(event_lift_override))
                from prom
                group by location_id, item_id, sales_date
            ) prom1

-- removing nvl from above (bacause) dynamic cols


 s.sales_date between case
                    when to_char(current_date, 'mon') in ('jan', 'feb')
                    then add_months(trunc(current_date, 'yy'), - 22)
                    else add_months(trunc(current_date, 'yyyy'), -10)
this date to be udated as sysdate

   (select  dateadd('year', -3, date_trunc('year',s.sales_date))
                from s)	

 and mp.item_id = s.item_id
                and mp.location_id = s.location_id
                and cal.datet = s.sales_date
                and ac.t_ep_hot_abc_class_ep_id = mp.t_ep_hot_abc_class_ep_id
                and s.item_id = lp1.item_id(+)
                and s.location_id = lp1.location_id(+)
                and mp.t_ep_item_ep_id = ti.t_ep_item_ep_id
                -- and nvl(ti.ebs_item_dest_key,0) = msi.inventory_item_id(+)
                and ti.item = msi.segment1(+)
                and msi.organization_id(+) = 82
                and mp.t_ep_organization_ep_id = teo.t_ep_organization_ep_id
                -- and nvl(teo.ebs_org_dest_key,0) = mop.partner_id(+)
                and nvl(teo.organization, 'na') = mop.organization_code(+)
                and mp.t_ep_ebs_demand_class_ep_id = td.t_ep_ebs_demand_class_ep_id
                -- next step right outer join of sales_promo
                and sales_promo.location_id = sales_promo.location_id(+)
                and sales_promo.item_id = sales_promo.item_id(+)
                and sales_promo.sales_date = sales_promo.sales_date(+)
                and mop.sr_tp_id = ord.organization_id(+)
                and ord.set_of_books_id = sob.set_of_books_id(+)
                -- instead of cc and ea replace it with cust_group_lob 
                and mp.t_ep_e1_cust_cat_2_ep_id = cc.t_ep_e1_cust_cat_2_ep_id
                and mp.t_ep_ebs_account_ep_id = ea.t_ep_ebs_account_ep_id
                -- entire sub string replace with joining curtomer_grp_lob (customer_account_number) remove (195 from substr to 198)
               -- and hca.customer_account_number(+) = substr(
                 --   ea.ebs_account,
                   -- regexp_instr(ea.ebs_account, ':', -1, 1) + 1,
                    --length(ea.ebs_account) - regexp_instr(ea.ebs_account, ':', -1, 1)
                --)
                and fl.lookup_type(+) = 'hot_override_price_tag'
                and substr(ea.ebs_account, regexp_instr(ea.ebs_account, ':', -1) + 1)
                = fl.lookup_code(+)
                and s.sales_date >= trunc(current_date, 'mm')
                and (prom1.event_lift_override > 0)

        
    