DECLARE
BEGIN
BIAPPS.HOT_PTP_OBIEE_DATA_EXTRACT.HOT_PTP_SALES_DATA_FULL();
END;




select	
	
	HOT_PTP_SALES_DATA_STG.ITEM_ID	   C1_ITEM_ID,
	HOT_PTP_SALES_DATA_STG.LOCATION_ID	   C2_LOCATION_ID,
	HOT_PTP_SALES_DATA_STG.SALES_DATE	   C3_SALES_DATE,
	HOT_PTP_SALES_DATA_STG.DEMAND_LY	   C4_LAST_YEAR_SALES,
	HOT_PTP_SALES_DATA_STG.ACTUAL_QUANTITY	   C5_ACTUAL_QTY,
	HOT_PTP_SALES_DATA_STG.ACTUALS_TTL_DOL	   C6_ACTUALS_TOTAL_VALUE,
	HOT_PTP_SALES_DATA_STG.COGS_SD	   C7_COGS_SD,
	HOT_PTP_SALES_DATA_STG.SALES_BASE_OVERRIDE	   C8_SALES_BASE_OVERRID,
	HOT_PTP_SALES_DATA_STG.BUDGET	   C9_BUDGET_VALUE,
	HOT_PTP_SALES_DATA_STG.INVOICE_PRICE_SD	   C10_INVOICE_PRICE_SD,
	CASE WHEN HOT_PTP_SALES_DATA_STG.DEMAND_LY*HOT_PTP_SALES_DATA_STG.INVOICE_PRICE_SD IS NULL THEN 0
ELSE
HOT_PTP_SALES_DATA_STG.DEMAND_LY*HOT_PTP_SALES_DATA_STG.INVOICE_PRICE_SD
END	   C11_LAST_YEAR_SALES_DLR,
	(CASE WHEN HOT_PTP_SALES_DATA_STG.MAX_DATE_DIFF IN (-1,0)
THEN 0
ELSE
(CASE WHEN HOT_PTP_SALES_DATA_STG.SALES_BASE_OVERRIDE IS NULL
THEN
(CASE WHEN HOT_PTP_SALES_DATA_STG.FORE_0_CALC IS NULL
THEN 0
ELSE  HOT_PTP_SALES_DATA_STG.FORE_0_CALC
END)
ELSE
HOT_PTP_SALES_DATA_STG.SALES_BASE_OVERRIDE
END)
END)	   C12_BASE_FORECAST,
	HOT_PTP_SALES_DATA_STG.INCREMENTAL_FORECAST	   C13_INCREMENTAL_FORECAST,
	HOT_PTP_SALES_DATA_STG.TOTAL_FORECAST	   C14_TOTAL_SALES_FORECAST,
	CASE WHEN HOT_PTP_SALES_DATA_STG.ACTUAL_QUANTITY=0 OR HOT_PTP_SALES_DATA_STG.ACTUAL_QUANTITY IS NULL
THEN
(CASE WHEN HOT_PTP_SALES_DATA_STG.TOTAL_FORECAST IS NULL THEN 0 ELSE HOT_PTP_SALES_DATA_STG.TOTAL_FORECAST END)
ELSE
HOT_PTP_SALES_DATA_STG.ACTUAL_QUANTITY
END	   C15_SALES_PROJ_VOL,

	(CASE WHEN HOT_PTP_SALES_DATA_STG.ACTUAL_QUANTITY=0 OR HOT_PTP_SALES_DATA_STG.ACTUAL_QUANTITY IS NULL
THEN
(CASE WHEN HOT_PTP_SALES_DATA_STG.TOTAL_FORECAST IS NULL THEN 0 ELSE HOT_PTP_SALES_DATA_STG.TOTAL_FORECAST END)
ELSE
HOT_PTP_SALES_DATA_STG.ACTUAL_QUANTITY
END)*(CASE WHEN HOT_PTP_SALES_DATA_STG.INVOICE_PRICE_SD IS NULL
THEN (CASE WHEN HOT_PTP_SALES_DATA_STG.HOT_EST_LIST_PRICE IS NULL 
THEN 0 ELSE HOT_PTP_SALES_DATA_STG.HOT_EST_LIST_PRICE END)
ELSE HOT_PTP_SALES_DATA_STG.INVOICE_PRICE_SD
END)
	   C16_SALES_PROJ_VALUE,

	(CASE WHEN HOT_PTP_SALES_DATA_STG.MAX_DATE_DIFF in (-1,0) THEN 0
ELSE
(CASE WHEN HOT_PTP_SALES_DATA_STG.SALES_BASE_OVERRIDE IS NULL THEN
(CASE WHEN HOT_PTP_SALES_DATA_STG.FORE_0_CALC IS NULL THEN 0 ELSE FORE_0_CALC END)
ELSE
HOT_PTP_SALES_DATA_STG.SALES_BASE_OVERRIDE
END)
END)	   C17_VOLUME_BASE_FUTURE,


	(CASE WHEN HOT_PTP_SALES_DATA_STG.MAX_DATE_DIFF in (-1,0) THEN 0
ELSE
(CASE WHEN HOT_PTP_SALES_DATA_STG.SALES_BASE_OVERRIDE IS NULL THEN
(CASE WHEN HOT_PTP_SALES_DATA_STG.FORE_0_CALC IS NULL THEN 0 ELSE FORE_0_CALC END)
ELSE
HOT_PTP_SALES_DATA_STG.SALES_BASE_OVERRIDE
END)END)*
(CASE WHEN HOT_PTP_SALES_DATA_STG.INVOICE_PRICE_SD IS NULL
THEN (CASE WHEN HOT_PTP_SALES_DATA_STG.HOT_EST_LIST_PRICE IS NULL 
THEN 0 ELSE HOT_PTP_SALES_DATA_STG.HOT_EST_LIST_PRICE END)
ELSE HOT_PTP_SALES_DATA_STG.INVOICE_PRICE_SD
END)	   C18_VOLUME_BASE_FUTURE_VALUE,


	(CASE WHEN
(CASE WHEN HOT_PTP_SALES_DATA_STG.ENTER_FORE IS NULL THEN
(CASE WHEN HOT_PTP_SALES_DATA_STG.COL_FOR_OVER IS NULL
THEN 
(CASE WHEN HOT_PTP_SALES_DATA_STG.MANUAL_STAT IS NULL 
THEN 
(CASE WHEN HOT_PTP_SALES_DATA_STG.SIM_VAL_1 IS NULL THEN HOT_PTP_SALES_DATA_STG.FORE_0_CALC ELSE HOT_PTP_SALES_DATA_STG.SIM_VAL_1 END)
ELSE
HOT_PTP_SALES_DATA_STG.MANUAL_STAT
END)*
(1.00 -
(CASE WHEN HOT_PTP_SALES_DATA_STG.TRG_CANNIZN_PERC = 1
THEN HOT_PTP_SALES_DATA_STG.TRG_CANNIZN_PERC
ELSE 0
END))*
(1.00 -
(CASE WHEN HOT_PTP_SALES_DATA_STG.SRC_CANNIZN_PERC IS NULL 
THEN 0
ELSE
HOT_PTP_SALES_DATA_STG.SRC_CANNIZN_PERC
END)) *
(1.00 +
(CASE WHEN HOT_PTP_SALES_DATA_STG.MANUAL_FACT IS NULL 
THEN 0
ELSE
HOT_PTP_SALES_DATA_STG.MANUAL_FACT
END))
+
(CASE WHEN HOT_PTP_SALES_DATA_STG.FIXED_PROM IS NULL 
THEN 0
ELSE
HOT_PTP_SALES_DATA_STG.FIXED_PROM
END)*
(1.00 -
(CASE WHEN HOT_PTP_SALES_DATA_STG.RULE_COLL IS NULL 
THEN 0
ELSE
HOT_PTP_SALES_DATA_STG.RULE_COLL
END))
+
(CASE WHEN HOT_PTP_SALES_DATA_STG.INT_COST IS NULL 
THEN 0
ELSE
HOT_PTP_SALES_DATA_STG.INT_COST
END)*
(CASE WHEN HOT_PTP_SALES_DATA_STG.RULE_COLL IS NULL 
THEN 0
ELSE
HOT_PTP_SALES_DATA_STG.RULE_COLL
END)
ELSE
HOT_PTP_SALES_DATA_STG.COL_FOR_OVER
END)
ELSE
HOT_PTP_SALES_DATA_STG.FF
END) IS NULL
THEN 0
ELSE
(CASE WHEN HOT_PTP_SALES_DATA_STG.ENTER_FORE IS NULL THEN
(CASE WHEN HOT_PTP_SALES_DATA_STG.COL_FOR_OVER IS NULL
THEN 
(CASE WHEN HOT_PTP_SALES_DATA_STG.MANUAL_STAT IS NULL 
THEN 
(CASE WHEN HOT_PTP_SALES_DATA_STG.SIM_VAL_1 IS NULL THEN HOT_PTP_SALES_DATA_STG.FORE_0_CALC ELSE HOT_PTP_SALES_DATA_STG.SIM_VAL_1 END)
ELSE
HOT_PTP_SALES_DATA_STG.MANUAL_STAT
END)*
(1.00 -
(CASE WHEN HOT_PTP_SALES_DATA_STG.TRG_CANNIZN_PERC = 1
THEN HOT_PTP_SALES_DATA_STG.TRG_CANNIZN_PERC
ELSE 0
END))*
(1.00 -
(CASE WHEN HOT_PTP_SALES_DATA_STG.SRC_CANNIZN_PERC IS NULL 
THEN 0
ELSE
HOT_PTP_SALES_DATA_STG.SRC_CANNIZN_PERC
END)) *
(1.00 +
(CASE WHEN HOT_PTP_SALES_DATA_STG.MANUAL_FACT IS NULL 
THEN 0
ELSE
HOT_PTP_SALES_DATA_STG.MANUAL_FACT
END))
+
(CASE WHEN HOT_PTP_SALES_DATA_STG.FIXED_PROM IS NULL 
THEN 0
ELSE
HOT_PTP_SALES_DATA_STG.FIXED_PROM
END)*
(1.00 -
(CASE WHEN HOT_PTP_SALES_DATA_STG.RULE_COLL IS NULL 
THEN 0
ELSE
HOT_PTP_SALES_DATA_STG.RULE_COLL
END))
+
(CASE WHEN HOT_PTP_SALES_DATA_STG.INT_COST IS NULL 
THEN 0
ELSE
HOT_PTP_SALES_DATA_STG.INT_COST
END)*
(CASE WHEN HOT_PTP_SALES_DATA_STG.RULE_COLL IS NULL 
THEN 0
ELSE
HOT_PTP_SALES_DATA_STG.RULE_COLL
END)
ELSE
HOT_PTP_SALES_DATA_STG.COL_FOR_OVER
END)
ELSE
HOT_PTP_SALES_DATA_STG.FF
END)
END)* 1	   C19_FINAL_FORECAST,


	(CASE WHEN HOT_PTP_SALES_DATA_STG.WCP_OVERRIDE IS NULL
THEN
(
(
(CASE WHEN HOT_PTP_SALES_DATA_STG.MANUAL_STAT IS NULL 
THEN
(CASE WHEN HOT_PTP_SALES_DATA_STG.SIM_VAL_1 IS NULL
THEN HOT_PTP_SALES_DATA_STG.FORE_0_CALC
ELSE HOT_PTP_SALES_DATA_STG.SIM_VAL_1 
END)
ELSE
HOT_PTP_SALES_DATA_STG.MANUAL_STAT
END)
*
(1.00 +
(CASE WHEN HOT_PTP_SALES_DATA_STG.MANUAL_FACT IS NULL
THEN 0
ELSE HOT_PTP_SALES_DATA_STG.MANUAL_FACT
END)
)


*
(CASE WHEN HOT_PTP_SALES_DATA_STG.PCT_FINAL_WEIGHT IS NULL
THEN 1
ELSE HOT_PTP_SALES_DATA_STG.PCT_FINAL_WEIGHT
END)



+
(CASE WHEN HOT_PTP_SALES_DATA_STG.SALES_OVERRIDE IS NULL
THEN
(CASE WHEN HOT_PTP_SALES_DATA_STG.SALES_BASELINE IS NULL
THEN 0
ELSE HOT_PTP_SALES_DATA_STG.SALES_BASELINE
END)
ELSE
HOT_PTP_SALES_DATA_STG.SALES_OVERRIDE
END)



*
(
1.00 +
(CASE WHEN HOT_PTP_SALES_DATA_STG.SALES_PCT_CHANGE IS NULL
THEN 0
ELSE HOT_PTP_SALES_DATA_STG.SALES_PCT_CHANGE END))




*
(CASE WHEN HOT_PTP_SALES_DATA_STG.PCT_SALES_WEIGHT IS NULL
THEN 0
ELSE
HOT_PTP_SALES_DATA_STG.PCT_SALES_WEIGHT
END)


+
(CASE WHEN HOT_PTP_SALES_DATA_STG.MKTG_OVERRIDE IS NULL
THEN
(CASE WHEN HOT_PTP_SALES_DATA_STG.MKTG_BASELINE IS NULL
THEN 0
ELSE HOT_PTP_SALES_DATA_STG.MKTG_BASELINE
END)
ELSE
HOT_PTP_SALES_DATA_STG.MKTG_OVERRIDE
END)



*
(
1.00 +
(CASE WHEN HOT_PTP_SALES_DATA_STG.MKTG_PCT_CHANGE IS NULL
THEN 0
ELSE HOT_PTP_SALES_DATA_STG.MKTG_PCT_CHANGE END))

*
(CASE WHEN HOT_PTP_SALES_DATA_STG.PCT_MKTG_WEIGHT IS NULL
THEN 0
ELSE HOT_PTP_SALES_DATA_STG.PCT_MKTG_WEIGHT END)
)
/
(
(CASE WHEN HOT_PTP_SALES_DATA_STG.PCT_FINAL_WEIGHT IS NULL
THEN 1
ELSE HOT_PTP_SALES_DATA_STG.PCT_FINAL_WEIGHT END)
+
(CASE WHEN HOT_PTP_SALES_DATA_STG.PCT_SALES_WEIGHT IS NULL
THEN 0
ELSE HOT_PTP_SALES_DATA_STG.PCT_SALES_WEIGHT END)
+
(CASE WHEN HOT_PTP_SALES_DATA_STG.PCT_MKTG_WEIGHT IS NULL
THEN 0
ELSE HOT_PTP_SALES_DATA_STG.PCT_MKTG_WEIGHT END)
))
ELSE
HOT_PTP_SALES_DATA_STG.WCP_OVERRIDE
END) * HOT_PTP_SALES_DATA_STG.LIST_PRICE	   C20_CONSENSUS_FORECAST_VALUE,


	HOT_PTP_SALES_DATA_STG.LAST_UPDATE_DATE	   C21_LAST_UPDATE_DATE,

	(CASE WHEN HOT_PTP_SALES_DATA_STG.ACTUAL_QUANTITY IS NULL
THEN 0
ELSE HOT_PTP_SALES_DATA_STG.ACTUAL_QUANTITY END)
*
(CASE WHEN HOT_PTP_SALES_DATA_STG.INVOICE_PRICE_OVERRIDE IS NULL
THEN
(CASE WHEN HOT_PTP_SALES_DATA_STG.INVOICE_PRICE_SD IS NULL
THEN 0
ELSE  HOT_PTP_SALES_DATA_STG.INVOICE_PRICE_SD
END)
ELSE HOT_PTP_SALES_DATA_STG.INVOICE_PRICE_OVERRIDE
END)
	   C22_ACTUAL_TTL_VALUE,
	(CASE WHEN HOT_PTP_SALES_DATA_STG.EBS_BH_BOOK_QTY_BD IS NULL
THEN 0
ELSE
HOT_PTP_SALES_DATA_STG.EBS_BH_BOOK_QTY_BD
END)	   C23_BOOK_QUANTITY_BOOK_DATE,
	HOT_PTP_SALES_DATA_STG.ACTUAL_QUANTITY	   C24_HISTORY,
	HOT_PTP_SALES_DATA_STG.PSEUDO_SALE	   C25_HISTORY_OVERRIDE,
	(CASE WHEN HOT_PTP_SALES_DATA_STG.DEMAND IS NULL 
THEN
(CASE WHEN HOT_PTP_SALES_DATA_STG.PSEUDO_SALE IS NULL
THEN HOT_PTP_SALES_DATA_STG.ACTUAL_QUANTITY
ELSE
HOT_PTP_SALES_DATA_STG.PSEUDO_SALE
END)
*
(1.00 +
(
CASE WHEN HOT_PTP_SALES_DATA_STG.DEMAND_FACT IS NULL
THEN 0
ELSE
HOT_PTP_SALES_DATA_STG.DEMAND_FACT
END)
)
ELSE
(HOT_PTP_SALES_DATA_STG.DEMAND
*
(1.00 +
(
CASE WHEN HOT_PTP_SALES_DATA_STG.DEMAND_FACT IS NULL
THEN 0
ELSE
HOT_PTP_SALES_DATA_STG.DEMAND_FACT
END)
))
END)
	   C26_ADJUSTED_HISTORY,
	HOT_PTP_SALES_DATA_STG.SIM_VAL_1	   C27_SIMULATION,
	(CASE WHEN HOT_PTP_SALES_DATA_STG.SIM_VAL_1 IS NULL
THEN 
HOT_PTP_SALES_DATA_STG.FORE_0_CALC
ELSE
HOT_PTP_SALES_DATA_STG.SIM_VAL_1
END)
*
(CASE WHEN HOT_PTP_SALES_DATA_STG.INVOICE_PRICE_OVERRIDE IS NULL
THEN
(CASE WHEN HOT_PTP_SALES_DATA_STG.INVOICE_PRICE_SD IS NULL
THEN 0
ELSE  HOT_PTP_SALES_DATA_STG.INVOICE_PRICE_SD
END)
ELSE HOT_PTP_SALES_DATA_STG.INVOICE_PRICE_OVERRIDE
END)	   C28_BASELINE_FORECAST__,
	(CASE WHEN HOT_PTP_SALES_DATA_STG.SIM_VAL_1 IS NULL
THEN 
HOT_PTP_SALES_DATA_STG.FORE_0_CALC
ELSE
HOT_PTP_SALES_DATA_STG.SIM_VAL_1
END)
	   C29_BASELINE_FORECAST,
	HOT_PTP_SALES_DATA_STG.MANUAL_STAT	   C30_BASE_OVERRIDDE,
	(CASE WHEN HOT_PTP_SALES_DATA_STG.EBS_BH_BOOK_QTY_BD IS NULL
THEN 0
ELSE
HOT_PTP_SALES_DATA_STG.EBS_BH_BOOK_QTY_BD
END)
*
(CASE WHEN HOT_PTP_SALES_DATA_STG.INVOICE_PRICE_OVERRIDE IS NULL
THEN
(CASE WHEN HOT_PTP_SALES_DATA_STG.INVOICE_PRICE_SD IS NULL
THEN 0
ELSE  HOT_PTP_SALES_DATA_STG.INVOICE_PRICE_SD
END)
ELSE HOT_PTP_SALES_DATA_STG.INVOICE_PRICE_OVERRIDE
END)	   C31_BOOK_QUANTITY_BOOK_DATE__,
	HOT_PTP_SALES_DATA_STG.ACTUAL_QUANTITY *
(CASE WHEN HOT_PTP_SALES_DATA_STG.INVOICE_PRICE_OVERRIDE IS NULL
THEN
(CASE WHEN HOT_PTP_SALES_DATA_STG.INVOICE_PRICE_SD IS NULL
THEN 0
ELSE  HOT_PTP_SALES_DATA_STG.INVOICE_PRICE_SD
END)
ELSE HOT_PTP_SALES_DATA_STG.INVOICE_PRICE_OVERRIDE
END)	   C32_HISTORY__,
	((CASE WHEN
(CASE WHEN HOT_PTP_SALES_DATA_STG.ENTER_FORE IS NULL THEN
(CASE WHEN HOT_PTP_SALES_DATA_STG.COL_FOR_OVER IS NULL
THEN 
(CASE WHEN HOT_PTP_SALES_DATA_STG.MANUAL_STAT IS NULL 
THEN 
(CASE WHEN HOT_PTP_SALES_DATA_STG.SIM_VAL_1 IS NULL THEN HOT_PTP_SALES_DATA_STG.FORE_0_CALC ELSE HOT_PTP_SALES_DATA_STG.SIM_VAL_1 END)
ELSE
HOT_PTP_SALES_DATA_STG.MANUAL_STAT
END)*
(1.00 -
(CASE WHEN HOT_PTP_SALES_DATA_STG.TRG_CANNIZN_PERC = 1
THEN HOT_PTP_SALES_DATA_STG.TRG_CANNIZN_PERC
ELSE 0
END))*
(1.00 -
(CASE WHEN HOT_PTP_SALES_DATA_STG.SRC_CANNIZN_PERC IS NULL 
THEN 0
ELSE
HOT_PTP_SALES_DATA_STG.SRC_CANNIZN_PERC
END)) *
(1.00 +
(CASE WHEN HOT_PTP_SALES_DATA_STG.MANUAL_FACT IS NULL 
THEN 0
ELSE
HOT_PTP_SALES_DATA_STG.MANUAL_FACT
END))
+
(CASE WHEN HOT_PTP_SALES_DATA_STG.FIXED_PROM IS NULL 
THEN 0
ELSE
HOT_PTP_SALES_DATA_STG.FIXED_PROM
END)*
(1.00 -
(CASE WHEN HOT_PTP_SALES_DATA_STG.RULE_COLL IS NULL 
THEN 0
ELSE
HOT_PTP_SALES_DATA_STG.RULE_COLL
END))
+
(CASE WHEN HOT_PTP_SALES_DATA_STG.INT_COST IS NULL 
THEN 0
ELSE
HOT_PTP_SALES_DATA_STG.INT_COST
END)*
(CASE WHEN HOT_PTP_SALES_DATA_STG.RULE_COLL IS NULL 
THEN 0
ELSE
HOT_PTP_SALES_DATA_STG.RULE_COLL
END)
ELSE
HOT_PTP_SALES_DATA_STG.COL_FOR_OVER
END)
ELSE
HOT_PTP_SALES_DATA_STG.FF
END) IS NULL
THEN 0
ELSE
(CASE WHEN HOT_PTP_SALES_DATA_STG.ENTER_FORE IS NULL THEN
(CASE WHEN HOT_PTP_SALES_DATA_STG.COL_FOR_OVER IS NULL
THEN 
(CASE WHEN HOT_PTP_SALES_DATA_STG.MANUAL_STAT IS NULL 
THEN 
(CASE WHEN HOT_PTP_SALES_DATA_STG.SIM_VAL_1 IS NULL THEN HOT_PTP_SALES_DATA_STG.FORE_0_CALC ELSE HOT_PTP_SALES_DATA_STG.SIM_VAL_1 END)
ELSE
HOT_PTP_SALES_DATA_STG.MANUAL_STAT
END)*
(1.00 -
(CASE WHEN HOT_PTP_SALES_DATA_STG.TRG_CANNIZN_PERC = 1
THEN HOT_PTP_SALES_DATA_STG.TRG_CANNIZN_PERC
ELSE 0
END))*
(1.00 -
(CASE WHEN HOT_PTP_SALES_DATA_STG.SRC_CANNIZN_PERC IS NULL 
THEN 0
ELSE
HOT_PTP_SALES_DATA_STG.SRC_CANNIZN_PERC
END)) *
(1.00 +
(CASE WHEN HOT_PTP_SALES_DATA_STG.MANUAL_FACT IS NULL 
THEN 0
ELSE
HOT_PTP_SALES_DATA_STG.MANUAL_FACT
END))
+
(CASE WHEN HOT_PTP_SALES_DATA_STG.FIXED_PROM IS NULL 
THEN 0
ELSE
HOT_PTP_SALES_DATA_STG.FIXED_PROM
END)*
(1.00 -
(CASE WHEN HOT_PTP_SALES_DATA_STG.RULE_COLL IS NULL 
THEN 0
ELSE
HOT_PTP_SALES_DATA_STG.RULE_COLL
END))
+
(CASE WHEN HOT_PTP_SALES_DATA_STG.INT_COST IS NULL 
THEN 0
ELSE
HOT_PTP_SALES_DATA_STG.INT_COST
END)*
(CASE WHEN HOT_PTP_SALES_DATA_STG.RULE_COLL IS NULL 
THEN 0
ELSE
HOT_PTP_SALES_DATA_STG.RULE_COLL
END)
ELSE
HOT_PTP_SALES_DATA_STG.COL_FOR_OVER
END)
ELSE
HOT_PTP_SALES_DATA_STG.FF
END)
END)* 1)
*
(CASE WHEN HOT_PTP_SALES_DATA_STG.INVOICE_PRICE_OVERRIDE IS NULL
THEN
(CASE WHEN HOT_PTP_SALES_DATA_STG.INVOICE_PRICE_SD IS NULL
THEN 0
ELSE  HOT_PTP_SALES_DATA_STG.INVOICE_PRICE_SD
END)
ELSE HOT_PTP_SALES_DATA_STG.INVOICE_PRICE_OVERRIDE
END)
	   C33_FINAL_FORECAST__,
	(CASE WHEN HOT_PTP_SALES_DATA_STG.MANUAL_STAT IS NULL
THEN 
(CASE WHEN HOT_PTP_SALES_DATA_STG.FORE_0_CALC IS NULL 
THEN 0
ELSE HOT_PTP_SALES_DATA_STG.FORE_0_CALC
END)
ELSE
HOT_PTP_SALES_DATA_STG.MANUAL_STAT
END)
*
(CASE WHEN HOT_PTP_SALES_DATA_STG.MANUAL_FACT IS NULL
THEN 0
ELSE
HOT_PTP_SALES_DATA_STG.MANUAL_FACT
END)	   C34_CHANGE_TO_BASE,
	HOT_PTP_SALES_DATA_STG.MANUAL_STAT	   C35_MANUAL_STAT,
	(CASE WHEN HOT_PTP_SALES_DATA_STG.WCP_OVERRIDE IS NULL THEN
(((CASE WHEN HOT_PTP_SALES_DATA_STG.MANUAL_STAT IS NULL THEN
 (CASE WHEN HOT_PTP_SALES_DATA_STG.SIM_VAL_1 IS NULL
 THEN HOT_PTP_SALES_DATA_STG.FORE_0_CALC
 ELSE HOT_PTP_SALES_DATA_STG.SIM_VAL_1
 END)
 ELSE HOT_PTP_SALES_DATA_STG.MANUAL_STAT
 END)
 *
 (1.00 -
 (CASE WHEN HOT_PTP_SALES_DATA_STG.TRG_CANNIZN_PERC = 1 
 THEN HOT_PTP_SALES_DATA_STG.TRG_CANNIZN_PERC
 ELSE 0
 END)
 )
 *
 (1.00 -
 (CASE WHEN HOT_PTP_SALES_DATA_STG.SRC_CANNIZN_PERC IS NULL
 THEN 0
 ELSE HOT_PTP_SALES_DATA_STG.SRC_CANNIZN_PERC
 END)
 )
 *
 (1.00 +
 (CASE WHEN HOT_PTP_SALES_DATA_STG.MANUAL_FACT IS NULL
 THEN 0
 ELSE HOT_PTP_SALES_DATA_STG.MANUAL_FACT
 END)
 )
 *
 (CASE WHEN HOT_PTP_SALES_DATA_STG.PCT_FINAL_WEIGHT IS NULL
 THEN 1
 ELSE HOT_PTP_SALES_DATA_STG.PCT_FINAL_WEIGHT
 END) 
 +
 (CASE WHEN HOT_PTP_SALES_DATA_STG.SALES_OVERRIDE IS NULL THEN
 (CASE WHEN HOT_PTP_SALES_DATA_STG.SALES_BASELINE IS NULL
 THEN 0 
 ELSE HOT_PTP_SALES_DATA_STG.SALES_BASELINE
 END)
 ELSE HOT_PTP_SALES_DATA_STG.SALES_OVERRIDE
 END)
 *
 (1.00 +
 (CASE WHEN HOT_PTP_SALES_DATA_STG.SALES_PCT_CHANGE IS NULL
 THEN 0 
 ELSE HOT_PTP_SALES_DATA_STG.SALES_PCT_CHANGE
 END)
 )
 *
 (CASE WHEN HOT_PTP_SALES_DATA_STG.PCT_SALES_WEIGHT IS NULL
 THEN 0 
 ELSE HOT_PTP_SALES_DATA_STG.PCT_SALES_WEIGHT
 END)
 +
 (CASE WHEN HOT_PTP_SALES_DATA_STG.MKTG_OVERRIDE IS NULL THEN
 (CASE WHEN HOT_PTP_SALES_DATA_STG.MKTG_BASELINE IS NULL
 THEN 0 
 ELSE HOT_PTP_SALES_DATA_STG.MKTG_BASELINE
 END)
 ELSE HOT_PTP_SALES_DATA_STG.MKTG_OVERRIDE
 END)
 *
 (1.00 +
 (CASE WHEN HOT_PTP_SALES_DATA_STG.MKTG_PCT_CHANGE IS NULL
 THEN 0 
 ELSE HOT_PTP_SALES_DATA_STG.MKTG_PCT_CHANGE
 END)
 )
 *
 (CASE WHEN HOT_PTP_SALES_DATA_STG.PCT_MKTG_WEIGHT IS NULL
 THEN 0
 ELSE HOT_PTP_SALES_DATA_STG.PCT_MKTG_WEIGHT
 END)
 )
 /
(
 (CASE WHEN HOT_PTP_SALES_DATA_STG.PCT_FINAL_WEIGHT IS NULL
 THEN 1
 ELSE HOT_PTP_SALES_DATA_STG.PCT_FINAL_WEIGHT
 END)
 +
 (CASE WHEN HOT_PTP_SALES_DATA_STG.PCT_SALES_WEIGHT IS NULL
 THEN 0
 ELSE HOT_PTP_SALES_DATA_STG.PCT_SALES_WEIGHT
 END)
 +
 (CASE WHEN HOT_PTP_SALES_DATA_STG.PCT_MKTG_WEIGHT IS NULL
 THEN 0
 ELSE HOT_PTP_SALES_DATA_STG.PCT_MKTG_WEIGHT
 END)
 ))
 ELSE HOT_PTP_SALES_DATA_STG.WCP_OVERRIDE
 END)
	   C36_CONSENSUS_FORECAST,
	(CASE WHEN HOT_PTP_SALES_DATA_STG.DEMAND IS NULL 
THEN
(CASE WHEN HOT_PTP_SALES_DATA_STG.PSEUDO_SALE IS NULL
THEN HOT_PTP_SALES_DATA_STG.ACTUAL_QUANTITY
ELSE
HOT_PTP_SALES_DATA_STG.PSEUDO_SALE
END)
*
(1.00 +
(
CASE WHEN HOT_PTP_SALES_DATA_STG.DEMAND_FACT IS NULL
THEN 0
ELSE
HOT_PTP_SALES_DATA_STG.DEMAND_FACT
END)
)
ELSE
(HOT_PTP_SALES_DATA_STG.DEMAND
*
(1.00 +
(
CASE WHEN HOT_PTP_SALES_DATA_STG.DEMAND_FACT IS NULL
THEN 0
ELSE
HOT_PTP_SALES_DATA_STG.DEMAND_FACT
END)
))
END)
*
(CASE WHEN HOT_PTP_SALES_DATA_STG.INVOICE_PRICE_OVERRIDE IS NULL
THEN
(CASE WHEN HOT_PTP_SALES_DATA_STG.INVOICE_PRICE_SD IS NULL
THEN 0
ELSE  HOT_PTP_SALES_DATA_STG.INVOICE_PRICE_SD
END)
ELSE HOT_PTP_SALES_DATA_STG.INVOICE_PRICE_OVERRIDE
END)	   C37_ADJUSTED_HISTORY__,
	(CASE WHEN HOT_PTP_SALES_DATA_STG.MAX_DATE_DIFF IN (-1,0)
THEN 0
ELSE
(CASE WHEN HOT_PTP_SALES_DATA_STG.SALES_BASE_OVERRIDE IS NULL
THEN
(CASE WHEN HOT_PTP_SALES_DATA_STG.FORE_0_CALC IS NULL
THEN 0
ELSE  HOT_PTP_SALES_DATA_STG.FORE_0_CALC
END)
ELSE
HOT_PTP_SALES_DATA_STG.SALES_BASE_OVERRIDE
END)
END)*
(CASE WHEN HOT_PTP_SALES_DATA_STG.INVOICE_PRICE_OVERRIDE IS NULL
THEN
(CASE WHEN HOT_PTP_SALES_DATA_STG.INVOICE_PRICE_SD IS NULL
THEN 0
ELSE  HOT_PTP_SALES_DATA_STG.INVOICE_PRICE_SD
END)
ELSE HOT_PTP_SALES_DATA_STG.INVOICE_PRICE_OVERRIDE
END)
	   C38_BASE_FORECAST__,
	CASE WHEN HOT_PTP_SALES_DATA_STG.DO_FORE = 0 THEN
'DO NOT FORECAST'
WHEN HOT_PTP_SALES_DATA_STG.DO_FORE = 1 THEN
'DO FORECAST'
WHEN HOT_PTP_SALES_DATA_STG.DO_FORE = 2 THEN
'DO ZERO FORECAST'
ELSE
NULL
END	   C39_FORECAST_FLAG,
	HOT_PTP_SALES_DATA_STG.HOT_BUDGET_REVIEW_1	   C40_HOT_BUDGET_VALUE_REVIEW_1,
	HOT_PTP_SALES_DATA_STG.HOT_BUDGET_REVIEW_2	   C41_HOT_BUDGET_VALUE_REVIEW_2,
	(CASE WHEN HOT_PTP_SALES_DATA_STG.HOT_FUTURE_ORDERS IS NULL
THEN 0
ELSE HOT_PTP_SALES_DATA_STG.HOT_FUTURE_ORDERS
END)	   C42_HOT_FUTURE_ORDERS,
	(CASE WHEN HOT_PTP_SALES_DATA_STG.HOT_FUTURE_ORDERS IS NULL
THEN 0
ELSE HOT_PTP_SALES_DATA_STG.HOT_FUTURE_ORDERS
END)*
(CASE WHEN HOT_PTP_SALES_DATA_STG.INVOICE_PRICE_OVERRIDE IS NULL
THEN
(CASE WHEN HOT_PTP_SALES_DATA_STG.INVOICE_PRICE_SD IS NULL
THEN 0
ELSE  HOT_PTP_SALES_DATA_STG.INVOICE_PRICE_SD
END)
ELSE HOT_PTP_SALES_DATA_STG.INVOICE_PRICE_OVERRIDE
END)	   C43_HOT_FUTURE_ORDERS__,
	HOT_PTP_SALES_DATA_STG.HOT_WTD_SHIP	   C44_HOT_WTD_SHIP,
	HOT_PTP_SALES_DATA_STG.ONE_MONTH_LAG_FCST	   C45_ONE_MONTH_LAG_FCST,
	HOT_PTP_SALES_DATA_STG.TWO_MONTH_LAG_FCST	   C46_TWO_MONTH_LAG_FCST,
	HOT_PTP_SALES_DATA_STG.THREE_MONTH_LAG_FCST	   C47_THREE_MONTH_LAG_FCST,
	HOT_PTP_SALES_DATA_STG.FOUR_MONTH_LAG_FCST	   C48_FOUR_MONTH_LAG_FCST,
	HOT_PTP_SALES_DATA_STG.HOT_HYPERION_UNITS	   C49_HOT_HYPERION_UNITS,
	HOT_PTP_SALES_DATA_STG.HOT_HYPERION_BUDGET	   C50_HOT_HYPERION_BUDGET,
	HOT_PTP_SALES_DATA_STG.HOT_BUDGET_REVIEW_3	   C51_HOT_BUDGET_VALUE_REVIEW_3,
	HOT_PTP_SALES_DATA_STG.HOT_HYPERION_UNITS_REV1	   C52_HOT_HYPERION_UNITS_REV1,
	HOT_PTP_SALES_DATA_STG.HOT_HYPERION_UNITS_REV2	   C53_HOT_HYPERION_UNITS_REV2,
	HOT_PTP_SALES_DATA_STG.HOT_HYPERION_UNITS_REV3	   C54_HOT_HYPERION_UNITS_REV3,
	HOT_PTP_SALES_DATA_STG.HOT_HYPERION_BUDGET_REV1	   C55_HOT_HYPERION_BUDGET_REV1,
	HOT_PTP_SALES_DATA_STG.HOT_HYPERION_BUDGET_REV_2	   C56_HOT_HYPERION_BUDGET_REV_2,
	HOT_PTP_SALES_DATA_STG.HOT_HYPERION_BUDGET_REV3	   C57_HOT_HYPERION_BUDGET_REV3,
	HOT_PTP_SALES_DATA_STG.HOT_HYPERION_COGS_REV1	   C58_HOT_HYPERION_COGS_REV1,
	HOT_PTP_SALES_DATA_STG.HOT_HYPERION_COGS_REV2	   C59_HOT_HYPERION_COGS_REV2,
	HOT_PTP_SALES_DATA_STG.HOT_HYPERION_COGS_REV3	   C60_HOT_HYPERION_COGS_REV3,
	HOT_PTP_SALES_DATA_STG.HOT_TARG_FCST_5_LAG	   C61_FIVE_MONTH_LAG_FCST,
	HOT_PTP_SALES_DATA_STG.HOT_TARG_FCST_6_LAG	   C62_SIX_MONTH_LAG_FCST,
	HOT_PTP_SALES_DATA_STG.HOT_TARG_FCST_7_LAG	   C63_SEVEN_MONTH_LAG_FCST,
	HOT_PTP_SALES_DATA_STG.HOT_TARG_FCST_8_LAG	   C64_EIGHT_MONTH_LAG_FCST,
	HOT_PTP_SALES_DATA_STG.HOT_TARG_FCST_9_LAG	   C65_NINE_MONTH_LAG_FCST,
	HOT_PTP_SALES_DATA_STG.HOT_TARG_FCST_10_LAG	   C66_TEN_MONTH_LAG_FCST,
	HOT_PTP_SALES_DATA_STG.HOT_TARG_FCST_11_LAG	   C67_ELEVEN_MONTH_LAG_FCST,
	HOT_PTP_SALES_DATA_STG.HOT_TARG_FCST_12_LAG	   C68_TWELVE_MONTH_LAG_FCST,
	HOT_PTP_SALES_DATA_STG.HOT_ABC_FLAG	   C69_HOT_ABC_FLAG,
	HOT_PTP_SALES_DATA_STG.MAX_SALES_DATE	   C70_MAX_SALES_DATE,
	HOT_PTP_SALES_DATA_STG.BAT_FCST_1_LAG	   C71_ONE_MONTH_LAG_BAT_FCST,
	HOT_PTP_SALES_DATA_STG.BAT_FCST_2_LAG	   C72_TWO_MONTH_LAG_BAT_FCST,
	HOT_PTP_SALES_DATA_STG.BAT_FCST_3_LAG	   C73_THREE_MONTH_LAG_BAT_FCST,
	HOT_PTP_SALES_DATA_STG.BAT_FCST_4_LAG	   C74_FOUR_MONTH_LAG_BAT_FCST,
	(CASE WHEN HOT_PTP_SALES_DATA_STG.MAX_DATE_DIFF = 1
THEN NULL
ELSE
((CASE WHEN 
(CASE WHEN HOT_PTP_SALES_DATA_STG.DEMAND IS NULL 
THEN
(CASE WHEN HOT_PTP_SALES_DATA_STG.PSEUDO_SALE IS NULL
THEN HOT_PTP_SALES_DATA_STG.ACTUAL_QUANTITY
ELSE
HOT_PTP_SALES_DATA_STG.PSEUDO_SALE
END)
*
(1.00 +
(
CASE WHEN HOT_PTP_SALES_DATA_STG.DEMAND_FACT IS NULL
THEN 0
ELSE
HOT_PTP_SALES_DATA_STG.DEMAND_FACT
END)
)
ELSE
(HOT_PTP_SALES_DATA_STG.DEMAND
*
(1.00 +
(
CASE WHEN HOT_PTP_SALES_DATA_STG.DEMAND_FACT IS NULL
THEN 0
ELSE
HOT_PTP_SALES_DATA_STG.DEMAND_FACT
END)
))
END) IS NULL
THEN 0
ELSE 
(CASE WHEN HOT_PTP_SALES_DATA_STG.DEMAND IS NULL 
THEN
(CASE WHEN HOT_PTP_SALES_DATA_STG.PSEUDO_SALE IS NULL
THEN HOT_PTP_SALES_DATA_STG.ACTUAL_QUANTITY
ELSE
HOT_PTP_SALES_DATA_STG.PSEUDO_SALE
END)
*
(1.00 +
(
CASE WHEN HOT_PTP_SALES_DATA_STG.DEMAND_FACT IS NULL
THEN 0
ELSE
HOT_PTP_SALES_DATA_STG.DEMAND_FACT
END)
)
ELSE
(HOT_PTP_SALES_DATA_STG.DEMAND
*
(1.00 +
(
CASE WHEN HOT_PTP_SALES_DATA_STG.DEMAND_FACT IS NULL
THEN 0
ELSE
HOT_PTP_SALES_DATA_STG.DEMAND_FACT
END)
))
END)
END)
-
(CASE WHEN HOT_PTP_SALES_DATA_STG.THREE_MONTH_LAG_FCST IS NULL
THEN 0
ELSE
HOT_PTP_SALES_DATA_STG.THREE_MONTH_LAG_FCST
END))
END)	   C75_THREE_MTH_ERROR_LAG_FCST,
	(CASE WHEN HOT_PTP_SALES_DATA_STG.MAX_DATE_DIFF = 1
THEN NULL
ELSE
((CASE WHEN 
(CASE WHEN HOT_PTP_SALES_DATA_STG.DEMAND IS NULL 
THEN
(CASE WHEN HOT_PTP_SALES_DATA_STG.PSEUDO_SALE IS NULL
THEN HOT_PTP_SALES_DATA_STG.ACTUAL_QUANTITY
ELSE
HOT_PTP_SALES_DATA_STG.PSEUDO_SALE
END)
*
(1.00 +
(
CASE WHEN HOT_PTP_SALES_DATA_STG.DEMAND_FACT IS NULL
THEN 0
ELSE
HOT_PTP_SALES_DATA_STG.DEMAND_FACT
END)
)
ELSE
(HOT_PTP_SALES_DATA_STG.DEMAND
*
(1.00 +
(
CASE WHEN HOT_PTP_SALES_DATA_STG.DEMAND_FACT IS NULL
THEN 0
ELSE
HOT_PTP_SALES_DATA_STG.DEMAND_FACT
END)
))
END) IS NULL
THEN 0
ELSE 
(CASE WHEN HOT_PTP_SALES_DATA_STG.DEMAND IS NULL 
THEN
(CASE WHEN HOT_PTP_SALES_DATA_STG.PSEUDO_SALE IS NULL
THEN HOT_PTP_SALES_DATA_STG.ACTUAL_QUANTITY
ELSE
HOT_PTP_SALES_DATA_STG.PSEUDO_SALE
END)
*
(1.00 +
(
CASE WHEN HOT_PTP_SALES_DATA_STG.DEMAND_FACT IS NULL
THEN 0
ELSE
HOT_PTP_SALES_DATA_STG.DEMAND_FACT
END)
)
ELSE
(HOT_PTP_SALES_DATA_STG.DEMAND
*
(1.00 +
(
CASE WHEN HOT_PTP_SALES_DATA_STG.DEMAND_FACT IS NULL
THEN 0
ELSE
HOT_PTP_SALES_DATA_STG.DEMAND_FACT
END)
))
END)
END)
-
(CASE WHEN HOT_PTP_SALES_DATA_STG.FOUR_MONTH_LAG_FCST IS NULL
THEN 0
ELSE
HOT_PTP_SALES_DATA_STG.FOUR_MONTH_LAG_FCST
END))
END)	   C76_FOUR_MTH_ERROR_LAG_FCST,
	(CASE WHEN HOT_PTP_SALES_DATA_STG.MAX_DATE_DIFF = 1
THEN NULL
ELSE
((CASE WHEN 
(CASE WHEN HOT_PTP_SALES_DATA_STG.DEMAND IS NULL 
THEN
(CASE WHEN HOT_PTP_SALES_DATA_STG.PSEUDO_SALE IS NULL
THEN HOT_PTP_SALES_DATA_STG.ACTUAL_QUANTITY
ELSE
HOT_PTP_SALES_DATA_STG.PSEUDO_SALE
END)
*
(1.00 +
(
CASE WHEN HOT_PTP_SALES_DATA_STG.DEMAND_FACT IS NULL
THEN 0
ELSE
HOT_PTP_SALES_DATA_STG.DEMAND_FACT
END)
)
ELSE
(HOT_PTP_SALES_DATA_STG.DEMAND
*
(1.00 +
(
CASE WHEN HOT_PTP_SALES_DATA_STG.DEMAND_FACT IS NULL
THEN 0
ELSE
HOT_PTP_SALES_DATA_STG.DEMAND_FACT
END)
))
END) IS NULL
THEN 0
ELSE 
(CASE WHEN HOT_PTP_SALES_DATA_STG.DEMAND IS NULL 
THEN
(CASE WHEN HOT_PTP_SALES_DATA_STG.PSEUDO_SALE IS NULL
THEN HOT_PTP_SALES_DATA_STG.ACTUAL_QUANTITY
ELSE
HOT_PTP_SALES_DATA_STG.PSEUDO_SALE
END)
*
(1.00 +
(
CASE WHEN HOT_PTP_SALES_DATA_STG.DEMAND_FACT IS NULL
THEN 0
ELSE
HOT_PTP_SALES_DATA_STG.DEMAND_FACT
END)
)
ELSE
(HOT_PTP_SALES_DATA_STG.DEMAND
*
(1.00 +
(
CASE WHEN HOT_PTP_SALES_DATA_STG.DEMAND_FACT IS NULL
THEN 0
ELSE
HOT_PTP_SALES_DATA_STG.DEMAND_FACT
END)
))
END)
END)
-
(CASE WHEN HOT_PTP_SALES_DATA_STG.BAT_FCST_3_LAG IS NULL
THEN 0
ELSE
HOT_PTP_SALES_DATA_STG.BAT_FCST_3_LAG
END))
END)	   C77_THREE_MTH_ERROR_LAG_BAT_FC,
	(CASE WHEN HOT_PTP_SALES_DATA_STG.MAX_DATE_DIFF = 1
THEN NULL
ELSE
((CASE WHEN 
(CASE WHEN HOT_PTP_SALES_DATA_STG.DEMAND IS NULL 
THEN
(CASE WHEN HOT_PTP_SALES_DATA_STG.PSEUDO_SALE IS NULL
THEN HOT_PTP_SALES_DATA_STG.ACTUAL_QUANTITY
ELSE
HOT_PTP_SALES_DATA_STG.PSEUDO_SALE
END)
*
(1.00 +
(
CASE WHEN HOT_PTP_SALES_DATA_STG.DEMAND_FACT IS NULL
THEN 0
ELSE
HOT_PTP_SALES_DATA_STG.DEMAND_FACT
END)
)
ELSE
(HOT_PTP_SALES_DATA_STG.DEMAND
*
(1.00 +
(
CASE WHEN HOT_PTP_SALES_DATA_STG.DEMAND_FACT IS NULL
THEN 0
ELSE
HOT_PTP_SALES_DATA_STG.DEMAND_FACT
END)
))
END) IS NULL
THEN 0
ELSE 
(CASE WHEN HOT_PTP_SALES_DATA_STG.DEMAND IS NULL 
THEN
(CASE WHEN HOT_PTP_SALES_DATA_STG.PSEUDO_SALE IS NULL
THEN HOT_PTP_SALES_DATA_STG.ACTUAL_QUANTITY
ELSE
HOT_PTP_SALES_DATA_STG.PSEUDO_SALE
END)
*
(1.00 +
(
CASE WHEN HOT_PTP_SALES_DATA_STG.DEMAND_FACT IS NULL
THEN 0
ELSE
HOT_PTP_SALES_DATA_STG.DEMAND_FACT
END)
)
ELSE
(HOT_PTP_SALES_DATA_STG.DEMAND
*
(1.00 +
(
CASE WHEN HOT_PTP_SALES_DATA_STG.DEMAND_FACT IS NULL
THEN 0
ELSE
HOT_PTP_SALES_DATA_STG.DEMAND_FACT
END)
))
END)
END)
-
(CASE WHEN HOT_PTP_SALES_DATA_STG.BAT_FCST_4_LAG IS NULL
THEN 0
ELSE
HOT_PTP_SALES_DATA_STG.BAT_FCST_4_LAG
END))
END)	   C78_FOUR_MTH_ERROR_LAG_BAT_FCS,
	HOT_PTP_SALES_DATA_STG.HOT_EST_LIST_PRICE	   C79_HOT_EST_LIST_PRICE,
	(CASE WHEN HOT_PTP_SALES_DATA_STG.MAX_DATE_DIFF = 1
THEN NULL
ELSE
((CASE WHEN HOT_PTP_SALES_DATA_STG.ACTUAL_QUANTITY IS NULL 
THEN 0
ELSE HOT_PTP_SALES_DATA_STG.ACTUAL_QUANTITY
END)
-
(CASE WHEN HOT_PTP_SALES_DATA_STG.ONE_MONTH_LAG_FCST IS NULL 
THEN 0
ELSE HOT_PTP_SALES_DATA_STG.ONE_MONTH_LAG_FCST
END))
END)	   C80_ONE_MTH_ERROR_LAG_FCST,
	(CASE WHEN HOT_PTP_SALES_DATA_STG.PERIOD_DIFF >=0
THEN HOT_PTP_SALES_DATA_STG.ONE_MONTH_LAG_FCST
ELSE NULL
END)	   C81_DISP_FCST_LAG_1,
	(CASE WHEN HOT_PTP_SALES_DATA_STG.PERIOD_DIFF= -1
THEN HOT_PTP_SALES_DATA_STG.ONE_MONTH_LAG_FCST
ELSE
(CASE WHEN HOT_PTP_SALES_DATA_STG.PERIOD_DIFF >=0
THEN HOT_PTP_SALES_DATA_STG.TWO_MONTH_LAG_FCST
ELSE NULL
END)
END)	   C82_DISP_FCST_LAG_2,
	(CASE WHEN HOT_PTP_SALES_DATA_STG.PERIOD_DIFF= -2 THEN HOT_PTP_SALES_DATA_STG.ONE_MONTH_LAG_FCST
      WHEN HOT_PTP_SALES_DATA_STG.PERIOD_DIFF= -1 THEN HOT_PTP_SALES_DATA_STG.TWO_MONTH_LAG_FCST
ELSE
(CASE WHEN HOT_PTP_SALES_DATA_STG.PERIOD_DIFF >=0 THEN HOT_PTP_SALES_DATA_STG.THREE_MONTH_LAG_FCST 
ELSE NULL
END)
END)	   C83_DISP_FCST_LAG_3,
	(CASE WHEN HOT_PTP_SALES_DATA_STG.PERIOD_DIFF= -3 THEN HOT_PTP_SALES_DATA_STG.ONE_MONTH_LAG_FCST
      WHEN HOT_PTP_SALES_DATA_STG.PERIOD_DIFF= -2 THEN HOT_PTP_SALES_DATA_STG.TWO_MONTH_LAG_FCST 
	  WHEN HOT_PTP_SALES_DATA_STG.PERIOD_DIFF= -1 THEN HOT_PTP_SALES_DATA_STG.THREE_MONTH_LAG_FCST 
ELSE
(CASE WHEN HOT_PTP_SALES_DATA_STG.PERIOD_DIFF >=0 THEN HOT_PTP_SALES_DATA_STG.FOUR_MONTH_LAG_FCST 
ELSE NULL
END)
END)	   C84_DISP_FCST_LAG_4,
	(CASE WHEN HOT_PTP_SALES_DATA_STG.PERIOD_DIFF= -4 THEN HOT_PTP_SALES_DATA_STG.ONE_MONTH_LAG_FCST
      WHEN HOT_PTP_SALES_DATA_STG.PERIOD_DIFF= -3 THEN HOT_PTP_SALES_DATA_STG.TWO_MONTH_LAG_FCST 
	  WHEN HOT_PTP_SALES_DATA_STG.PERIOD_DIFF= -2 THEN HOT_PTP_SALES_DATA_STG.THREE_MONTH_LAG_FCST 
	  WHEN HOT_PTP_SALES_DATA_STG.PERIOD_DIFF= -1 THEN HOT_PTP_SALES_DATA_STG.FOUR_MONTH_LAG_FCST 
ELSE
(CASE WHEN HOT_PTP_SALES_DATA_STG.PERIOD_DIFF >=0 THEN HOT_PTP_SALES_DATA_STG.HOT_TARG_FCST_5_LAG
ELSE NULL
END)
END)	   C85_DISP_FCST_LAG_5,
	(CASE WHEN HOT_PTP_SALES_DATA_STG.PERIOD_DIFF= -5 THEN HOT_PTP_SALES_DATA_STG.ONE_MONTH_LAG_FCST
      WHEN HOT_PTP_SALES_DATA_STG.PERIOD_DIFF= -4 THEN HOT_PTP_SALES_DATA_STG.TWO_MONTH_LAG_FCST 
	  WHEN HOT_PTP_SALES_DATA_STG.PERIOD_DIFF= -3 THEN HOT_PTP_SALES_DATA_STG.THREE_MONTH_LAG_FCST 
	  WHEN HOT_PTP_SALES_DATA_STG.PERIOD_DIFF= -2 THEN HOT_PTP_SALES_DATA_STG.FOUR_MONTH_LAG_FCST 
	  WHEN HOT_PTP_SALES_DATA_STG.PERIOD_DIFF= -1 THEN HOT_PTP_SALES_DATA_STG.HOT_TARG_FCST_5_LAG
ELSE
(CASE WHEN HOT_PTP_SALES_DATA_STG.PERIOD_DIFF >=0 THEN HOT_PTP_SALES_DATA_STG.HOT_TARG_FCST_6_LAG
ELSE NULL
END)
END)	   C86_DISP_FCST_LAG_6,
	(CASE WHEN HOT_PTP_SALES_DATA_STG.PERIOD_DIFF= -6 THEN HOT_PTP_SALES_DATA_STG.ONE_MONTH_LAG_FCST
      WHEN HOT_PTP_SALES_DATA_STG.PERIOD_DIFF= -5 THEN HOT_PTP_SALES_DATA_STG.TWO_MONTH_LAG_FCST 
	  WHEN HOT_PTP_SALES_DATA_STG.PERIOD_DIFF= -4 THEN HOT_PTP_SALES_DATA_STG.THREE_MONTH_LAG_FCST 
	  WHEN HOT_PTP_SALES_DATA_STG.PERIOD_DIFF= -3 THEN HOT_PTP_SALES_DATA_STG.FOUR_MONTH_LAG_FCST 
	  WHEN HOT_PTP_SALES_DATA_STG.PERIOD_DIFF= -2 THEN HOT_PTP_SALES_DATA_STG.HOT_TARG_FCST_5_LAG
	  WHEN HOT_PTP_SALES_DATA_STG.PERIOD_DIFF= -1 THEN HOT_PTP_SALES_DATA_STG.HOT_TARG_FCST_6_LAG
ELSE
(CASE WHEN HOT_PTP_SALES_DATA_STG.PERIOD_DIFF >=0 THEN HOT_PTP_SALES_DATA_STG.HOT_TARG_FCST_7_LAG
ELSE NULL
END)
END)	   C87_DISP_FCST_LAG_7,
	(CASE WHEN HOT_PTP_SALES_DATA_STG.PERIOD_DIFF= -7 THEN HOT_PTP_SALES_DATA_STG.ONE_MONTH_LAG_FCST
      WHEN HOT_PTP_SALES_DATA_STG.PERIOD_DIFF= -6 THEN HOT_PTP_SALES_DATA_STG.TWO_MONTH_LAG_FCST 
	  WHEN HOT_PTP_SALES_DATA_STG.PERIOD_DIFF= -5 THEN HOT_PTP_SALES_DATA_STG.THREE_MONTH_LAG_FCST 
	  WHEN HOT_PTP_SALES_DATA_STG.PERIOD_DIFF= -4 THEN HOT_PTP_SALES_DATA_STG.FOUR_MONTH_LAG_FCST 
	  WHEN HOT_PTP_SALES_DATA_STG.PERIOD_DIFF= -3 THEN HOT_PTP_SALES_DATA_STG.HOT_TARG_FCST_5_LAG
	  WHEN HOT_PTP_SALES_DATA_STG.PERIOD_DIFF= -2 THEN HOT_PTP_SALES_DATA_STG.HOT_TARG_FCST_6_LAG
	  WHEN HOT_PTP_SALES_DATA_STG.PERIOD_DIFF= -1 THEN HOT_PTP_SALES_DATA_STG.HOT_TARG_FCST_7_LAG
ELSE
(CASE WHEN HOT_PTP_SALES_DATA_STG.PERIOD_DIFF >=0 THEN HOT_PTP_SALES_DATA_STG.HOT_TARG_FCST_8_LAG
ELSE NULL
END)
END)	   C88_DISP_FCST_LAG_8,
	(CASE WHEN HOT_PTP_SALES_DATA_STG.PERIOD_DIFF= -8 THEN HOT_PTP_SALES_DATA_STG.ONE_MONTH_LAG_FCST
      WHEN HOT_PTP_SALES_DATA_STG.PERIOD_DIFF= -7 THEN HOT_PTP_SALES_DATA_STG.TWO_MONTH_LAG_FCST 
	  WHEN HOT_PTP_SALES_DATA_STG.PERIOD_DIFF= -6 THEN HOT_PTP_SALES_DATA_STG.THREE_MONTH_LAG_FCST 
	  WHEN HOT_PTP_SALES_DATA_STG.PERIOD_DIFF= -5 THEN HOT_PTP_SALES_DATA_STG.FOUR_MONTH_LAG_FCST 
	  WHEN HOT_PTP_SALES_DATA_STG.PERIOD_DIFF= -4 THEN HOT_PTP_SALES_DATA_STG.HOT_TARG_FCST_5_LAG
	  WHEN HOT_PTP_SALES_DATA_STG.PERIOD_DIFF= -3 THEN HOT_PTP_SALES_DATA_STG.HOT_TARG_FCST_6_LAG
	  WHEN HOT_PTP_SALES_DATA_STG.PERIOD_DIFF= -2 THEN HOT_PTP_SALES_DATA_STG.HOT_TARG_FCST_7_LAG
	  WHEN HOT_PTP_SALES_DATA_STG.PERIOD_DIFF= -1 THEN HOT_PTP_SALES_DATA_STG.HOT_TARG_FCST_8_LAG
ELSE
(CASE WHEN HOT_PTP_SALES_DATA_STG.PERIOD_DIFF >=0 THEN HOT_PTP_SALES_DATA_STG.HOT_TARG_FCST_9_LAG
ELSE NULL
END)
END)	   C89_DISP_FCST_LAG_9,
	(CASE WHEN HOT_PTP_SALES_DATA_STG.PERIOD_DIFF= -9 THEN HOT_PTP_SALES_DATA_STG.ONE_MONTH_LAG_FCST
      WHEN HOT_PTP_SALES_DATA_STG.PERIOD_DIFF= -8 THEN HOT_PTP_SALES_DATA_STG.TWO_MONTH_LAG_FCST 
	  WHEN HOT_PTP_SALES_DATA_STG.PERIOD_DIFF= -7 THEN HOT_PTP_SALES_DATA_STG.THREE_MONTH_LAG_FCST 
	  WHEN HOT_PTP_SALES_DATA_STG.PERIOD_DIFF= -6 THEN HOT_PTP_SALES_DATA_STG.FOUR_MONTH_LAG_FCST 
	  WHEN HOT_PTP_SALES_DATA_STG.PERIOD_DIFF= -5 THEN HOT_PTP_SALES_DATA_STG.HOT_TARG_FCST_5_LAG
	  WHEN HOT_PTP_SALES_DATA_STG.PERIOD_DIFF= -4 THEN HOT_PTP_SALES_DATA_STG.HOT_TARG_FCST_6_LAG
	  WHEN HOT_PTP_SALES_DATA_STG.PERIOD_DIFF= -3 THEN HOT_PTP_SALES_DATA_STG.HOT_TARG_FCST_7_LAG
	  WHEN HOT_PTP_SALES_DATA_STG.PERIOD_DIFF= -2 THEN HOT_PTP_SALES_DATA_STG.HOT_TARG_FCST_8_LAG
	  WHEN HOT_PTP_SALES_DATA_STG.PERIOD_DIFF= -1 THEN HOT_PTP_SALES_DATA_STG.HOT_TARG_FCST_9_LAG
ELSE
(CASE WHEN HOT_PTP_SALES_DATA_STG.PERIOD_DIFF >=0 THEN HOT_PTP_SALES_DATA_STG.HOT_TARG_FCST_10_LAG
ELSE NULL
END)
END)	   C90_DISP_FCST_LAG_10,
	(CASE WHEN HOT_PTP_SALES_DATA_STG.PERIOD_DIFF= -10 THEN HOT_PTP_SALES_DATA_STG.ONE_MONTH_LAG_FCST
      WHEN HOT_PTP_SALES_DATA_STG.PERIOD_DIFF= -9 THEN HOT_PTP_SALES_DATA_STG.TWO_MONTH_LAG_FCST 
	  WHEN HOT_PTP_SALES_DATA_STG.PERIOD_DIFF= -8 THEN HOT_PTP_SALES_DATA_STG.THREE_MONTH_LAG_FCST 
	  WHEN HOT_PTP_SALES_DATA_STG.PERIOD_DIFF= -7 THEN HOT_PTP_SALES_DATA_STG.FOUR_MONTH_LAG_FCST 
	  WHEN HOT_PTP_SALES_DATA_STG.PERIOD_DIFF= -6 THEN HOT_PTP_SALES_DATA_STG.HOT_TARG_FCST_5_LAG
	  WHEN HOT_PTP_SALES_DATA_STG.PERIOD_DIFF= -5 THEN HOT_PTP_SALES_DATA_STG.HOT_TARG_FCST_6_LAG
	  WHEN HOT_PTP_SALES_DATA_STG.PERIOD_DIFF= -4 THEN HOT_PTP_SALES_DATA_STG.HOT_TARG_FCST_7_LAG
	  WHEN HOT_PTP_SALES_DATA_STG.PERIOD_DIFF= -3 THEN HOT_PTP_SALES_DATA_STG.HOT_TARG_FCST_8_LAG
	  WHEN HOT_PTP_SALES_DATA_STG.PERIOD_DIFF= -2 THEN HOT_PTP_SALES_DATA_STG.HOT_TARG_FCST_9_LAG
	  WHEN HOT_PTP_SALES_DATA_STG.PERIOD_DIFF= -1 THEN HOT_PTP_SALES_DATA_STG.HOT_TARG_FCST_10_LAG
ELSE
(CASE WHEN HOT_PTP_SALES_DATA_STG.PERIOD_DIFF >=0 THEN HOT_PTP_SALES_DATA_STG.HOT_TARG_FCST_11_LAG
ELSE NULL
END)
END)	   C91_DISP_FCST_LAG_11,
	(CASE WHEN HOT_PTP_SALES_DATA_STG.PERIOD_DIFF= -11 THEN HOT_PTP_SALES_DATA_STG.ONE_MONTH_LAG_FCST
      WHEN HOT_PTP_SALES_DATA_STG.PERIOD_DIFF= -10 THEN HOT_PTP_SALES_DATA_STG.TWO_MONTH_LAG_FCST 
	  WHEN HOT_PTP_SALES_DATA_STG.PERIOD_DIFF= -9 THEN HOT_PTP_SALES_DATA_STG.THREE_MONTH_LAG_FCST 
	  WHEN HOT_PTP_SALES_DATA_STG.PERIOD_DIFF= -8 THEN HOT_PTP_SALES_DATA_STG.FOUR_MONTH_LAG_FCST 
	  WHEN HOT_PTP_SALES_DATA_STG.PERIOD_DIFF= -7 THEN HOT_PTP_SALES_DATA_STG.HOT_TARG_FCST_5_LAG
	  WHEN HOT_PTP_SALES_DATA_STG.PERIOD_DIFF= -6 THEN HOT_PTP_SALES_DATA_STG.HOT_TARG_FCST_6_LAG
	  WHEN HOT_PTP_SALES_DATA_STG.PERIOD_DIFF= -5 THEN HOT_PTP_SALES_DATA_STG.HOT_TARG_FCST_7_LAG
	  WHEN HOT_PTP_SALES_DATA_STG.PERIOD_DIFF= -4 THEN HOT_PTP_SALES_DATA_STG.HOT_TARG_FCST_8_LAG
	  WHEN HOT_PTP_SALES_DATA_STG.PERIOD_DIFF= -3 THEN HOT_PTP_SALES_DATA_STG.HOT_TARG_FCST_9_LAG
	  WHEN HOT_PTP_SALES_DATA_STG.PERIOD_DIFF= -2 THEN HOT_PTP_SALES_DATA_STG.HOT_TARG_FCST_10_LAG
	  WHEN HOT_PTP_SALES_DATA_STG.PERIOD_DIFF= -1 THEN HOT_PTP_SALES_DATA_STG.HOT_TARG_FCST_11_LAG
	  WHEN HOT_PTP_SALES_DATA_STG.PERIOD_DIFF= 0 THEN HOT_PTP_SALES_DATA_STG.HOT_TARG_FCST_12_LAG
ELSE
(CASE WHEN HOT_PTP_SALES_DATA_STG.PERIOD_DIFF <-11 THEN HOT_PTP_SALES_DATA_STG.ONE_MONTH_LAG_FCST
ELSE NULL
END)
END)	   C92_DISP_FCST_LAG_12,
	HOT_PTP_SALES_DATA_STG.PERIOD_DIFF	   C93_PERIOD_DIFF,
	HOT_PTP_SALES_DATA_STG.CURRENCY_CODE	   C94_CURRENCY_CODE,
	CASE WHEN HOT_PTP_SALES_DATA_STG.DO_FORE_OVERRIDE= 0
THEN 'DO NOT FORECAST'
WHEN HOT_PTP_SALES_DATA_STG.DO_FORE_OVERRIDE= 1
THEN 'DO FORECAST'
WHEN HOT_PTP_SALES_DATA_STG.DO_FORE_OVERRIDE= 2
THEN 'DO ZERO FORECAST'
ELSE
NULL
END
	   C95_FORECAST_FLAG_OVERRIDE,
	(CASE WHEN HOT_PTP_SALES_DATA_STG.ONE_MONTH_LAG_FCST IS NULL
THEN 0
ELSE HOT_PTP_SALES_DATA_STG.ONE_MONTH_LAG_FCST
END)*
(CASE WHEN HOT_PTP_SALES_DATA_STG.INVOICE_PRICE_OVERRIDE IS NULL
THEN
(CASE WHEN HOT_PTP_SALES_DATA_STG.INVOICE_PRICE_SD IS NULL
THEN 0
ELSE  HOT_PTP_SALES_DATA_STG.INVOICE_PRICE_SD
END)
ELSE HOT_PTP_SALES_DATA_STG.INVOICE_PRICE_OVERRIDE
END)	   C96_ONE_MONTH_LAG_FCST__,
	(CASE WHEN HOT_PTP_SALES_DATA_STG.TWO_MONTH_LAG_FCST IS NULL
THEN 0
ELSE HOT_PTP_SALES_DATA_STG.TWO_MONTH_LAG_FCST
END)*
(CASE WHEN HOT_PTP_SALES_DATA_STG.INVOICE_PRICE_OVERRIDE IS NULL
THEN
(CASE WHEN HOT_PTP_SALES_DATA_STG.INVOICE_PRICE_SD IS NULL
THEN 0
ELSE  HOT_PTP_SALES_DATA_STG.INVOICE_PRICE_SD
END)
ELSE HOT_PTP_SALES_DATA_STG.INVOICE_PRICE_OVERRIDE
END)
	   C97_TWO_MONTH_LAG_FCST__,
	(CASE WHEN HOT_PTP_SALES_DATA_STG.THREE_MONTH_LAG_FCST IS NULL
THEN 0
ELSE HOT_PTP_SALES_DATA_STG.THREE_MONTH_LAG_FCST
END)*
(CASE WHEN HOT_PTP_SALES_DATA_STG.INVOICE_PRICE_OVERRIDE IS NULL
THEN
(CASE WHEN HOT_PTP_SALES_DATA_STG.INVOICE_PRICE_SD IS NULL
THEN 0
ELSE  HOT_PTP_SALES_DATA_STG.INVOICE_PRICE_SD
END)
ELSE HOT_PTP_SALES_DATA_STG.INVOICE_PRICE_OVERRIDE
END)
	   C98_THREE_MONTH_LAG_FCST__,
	(CASE WHEN HOT_PTP_SALES_DATA_STG.FOUR_MONTH_LAG_FCST IS NULL
THEN 0
ELSE HOT_PTP_SALES_DATA_STG.FOUR_MONTH_LAG_FCST
END)*
(CASE WHEN HOT_PTP_SALES_DATA_STG.INVOICE_PRICE_OVERRIDE IS NULL
THEN
(CASE WHEN HOT_PTP_SALES_DATA_STG.INVOICE_PRICE_SD IS NULL
THEN 0
ELSE  HOT_PTP_SALES_DATA_STG.INVOICE_PRICE_SD
END)
ELSE HOT_PTP_SALES_DATA_STG.INVOICE_PRICE_OVERRIDE
END)
	   C99_FOUR_MONTH_LAG_FCST__,
	HOT_PTP_SALES_DATA_STG.INVENTORY_ITEM_ID||'~'||HOT_PTP_SALES_DATA_STG.ORG_ID	   C100_ITEM_ORG_ID,
	HOT_PTP_SALES_DATA_STG.DEMAND_CLASS	   C101_DEMAND_CLASS,
	HOT_PTP_SALES_DATA_STG.UPLIFT_FUTURE	   C102_UPLIFT_FUTURE,
	HOT_PTP_SALES_DATA_STG.ITEM_ID||'~'||HOT_PTP_SALES_DATA_STG.LOCATION_ID||'~'||HOT_PTP_SALES_DATA_STG.SALES_DATE_WID	   C103_INTEGRATION_ID,
	HOT_PTP_SALES_DATA_STG.HOT_1_LAG_FCST_DOL	   C104_ONE_MONTH_LAG_FCST_DOL,
	HOT_PTP_SALES_DATA_STG.HOT_UNCONSTRAINED_DEMAND	   C105_HOT_UNCONSTRAINED_DEMAND,
	(HOT_PTP_SALES_DATA_STG.HOT_UNCONSTRAINED_DEMAND) *
(CASE WHEN HOT_PTP_SALES_DATA_STG.INVOICE_PRICE_OVERRIDE IS NULL
THEN
(CASE WHEN HOT_PTP_SALES_DATA_STG.INVOICE_PRICE_SD IS NULL
THEN 0
ELSE  HOT_PTP_SALES_DATA_STG.INVOICE_PRICE_SD
END)
ELSE HOT_PTP_SALES_DATA_STG.INVOICE_PRICE_OVERRIDE
END)	   C106_HOT_UNCONSTRAINED_DEMAND_,
	HOT_PTP_SALES_DATA_STG.INVOICE_PRICE_OVERRIDE	   C107_INVOICE_PRICE_OVERRIDE,
	HOT_PTP_SALES_DATA_STG.CUSTOMER_ACCOUNT_ID	   C110_CUSTOMER_ACCOUNT_ID,
	HOT_PTP_SALES_DATA_STG.INVENTORY_ITEM_ID	   C111_INVENTORY_ITEM_ID,
	HOT_PTP_SALES_DATA_STG.ORG_ID	   C109_ORG_ID,
	HOT_PTP_SALES_DATA_STG.SALES_ACCOUNT	   C108_SALES_ACCOUNT
from	BIAPPS.HOT_PTP_SALES_DATA_STG   HOT_PTP_SALES_DATA_STG
where	(1=1)



 
insert into	BI11G_DW.WC_DM_FORECAST_F 
( 
	ITEM_ID,
	LOCATION_ID,
	SALES_DATE_WID,
	SALES_DATE,
	LAST_YEAR_SALES,
	ACTUAL_QTY,
	ACTUALS_TOTAL_VALUE,
	COGS_SD,
	SALES_BASE_OVERRID,
	BUDGET_VALUE,
	INVOICE_PRICE_SD,
	LAST_YEAR_SALES_DLR,
	BASE_FORECAST,
	INCREMENTAL_FORECAST,
	TOTAL_SALES_FORECAST,
	SALES_PROJ_VOL,
	SALES_PROJ_VALUE,
	VOLUME_BASE_FUTURE,
	VOLUME_BASE_FUTURE_VALUE,
	FINAL_FORECAST,
	CONSENSUS_FORECAST_VALUE,
	LAST_UPDATE_DATE,
	ACTUAL_TTL_VALUE,
	BOOK_QUANTITY_BOOK_DATE,
	HISTORY,
	HISTORY_OVERRIDE,
	ADJUSTED_HISTORY,
	SIMULATION,
	BASELINE_FORECAST_$,
	BASELINE_FORECAST,
	BASE_OVERRIDDE,
	BOOK_QUANTITY_BOOK_DATE_$,
	HISTORY_$,
	FINAL_FORECAST_$,
	CHANGE_TO_BASE,
	MANUAL_STAT,
	CONSENSUS_FORECAST,
	ADJUSTED_HISTORY_$,
	BASE_FORECAST_$,
	FORECAST_FLAG,
	HOT_BUDGET_VALUE_REVIEW_1,
	HOT_BUDGET_VALUE_REVIEW_2,
	HOT_FUTURE_ORDERS,
	HOT_FUTURE_ORDERS_$,
	HOT_WTD_SHIP,
	ONE_MONTH_LAG_FCST,
	TWO_MONTH_LAG_FCST,
	THREE_MONTH_LAG_FCST,
	FOUR_MONTH_LAG_FCST,
	HOT_HYPERION_UNITS,
	HOT_HYPERION_BUDGET,
	HOT_BUDGET_VALUE_REVIEW_3,
	HOT_HYPERION_UNITS_REV1,
	HOT_HYPERION_UNITS_REV2,
	HOT_HYPERION_UNITS_REV3,
	HOT_HYPERION_BUDGET_REV1,
	HOT_HYPERION_BUDGET_REV_2,
	HOT_HYPERION_BUDGET_REV3,
	HOT_HYPERION_COGS_REV1,
	HOT_HYPERION_COGS_REV2,
	HOT_HYPERION_COGS_REV3,
	FIVE_MONTH_LAG_FCST,
	SIX_MONTH_LAG_FCST,
	SEVEN_MONTH_LAG_FCST,
	EIGHT_MONTH_LAG_FCST,
	NINE_MONTH_LAG_FCST,
	TEN_MONTH_LAG_FCST,
	ELEVEN_MONTH_LAG_FCST,
	TWELVE_MONTH_LAG_FCST,
	HOT_ABC_FLAG,
	MAX_SALES_DATE,
	ONE_MONTH_LAG_BAT_FCST,
	TWO_MONTH_LAG_BAT_FCST,
	THREE_MONTH_LAG_BAT_FCST,
	FOUR_MONTH_LAG_BAT_FCST,
	THREE_MTH_ERROR_LAG_FCST,
	FOUR_MTH_ERROR_LAG_FCST,
	THREE_MTH_ERROR_LAG_BAT_FCST,
	FOUR_MTH_ERROR_LAG_BAT_FCST,
	HOT_EST_LIST_PRICE,
	ONE_MTH_ERROR_LAG_FCST,
	DISP_FCST_LAG_1,
	DISP_FCST_LAG_2,
	DISP_FCST_LAG_3,
	DISP_FCST_LAG_4,
	DISP_FCST_LAG_5,
	DISP_FCST_LAG_6,
	DISP_FCST_LAG_7,
	DISP_FCST_LAG_8,
	DISP_FCST_LAG_9,
	DISP_FCST_LAG_10,
	DISP_FCST_LAG_11,
	DISP_FCST_LAG_12,
	PERIOD_DIFF,
	CURRENCY_CODE,
	FORECAST_FLAG_OVERRIDE,
	ONE_MONTH_LAG_FCST_$,
	TWO_MONTH_LAG_FCST_$,
	THREE_MONTH_LAG_FCST_$,
	FOUR_MONTH_LAG_FCST_$,
	CUSTOMER_ACCOUNT_WID,
	CUSTOMER_WID,
	INT_ORG_WID,
	ITEM_ORG_ID,
	DEMAND_CLASS,
	UPLIFT_FUTURE,
	INTEGRATION_ID,
	PRODUCT_WID,
	INVENTORY_PRODUCT_WID,
	GL_SEGMENT1_WID,
	GL_SEGMENT4_WID,
	GL_SEGMENT7_WID,
	GL_SEGMENT8_WID,
	GL_SEGMENT2_WID,
	ONE_MONTH_LAG_FCST_DOL,
	GL_SEGMENT3_WID,
	HOT_UNCONSTRAINED_DEMAND,
	HOT_UNCONSTRAINED_DEMAND_$,
	INVOICE_PRICE_OVERRIDE 
	,DATASOURCE_NUM_ID 
) 

select
    ITEM_ID,
	LOCATION_ID,
	SALES_DATE_WID,
	SALES_DATE,
	LAST_YEAR_SALES,
	ACTUAL_QTY,
	ACTUALS_TOTAL_VALUE,
	COGS_SD,
	SALES_BASE_OVERRID,
	BUDGET_VALUE,
	INVOICE_PRICE_SD,
	LAST_YEAR_SALES_DLR,
	BASE_FORECAST,
	INCREMENTAL_FORECAST,
	TOTAL_SALES_FORECAST,
	SALES_PROJ_VOL,
	SALES_PROJ_VALUE,
	VOLUME_BASE_FUTURE,
	VOLUME_BASE_FUTURE_VALUE,
	FINAL_FORECAST,
	CONSENSUS_FORECAST_VALUE,
	LAST_UPDATE_DATE,
	ACTUAL_TTL_VALUE,
	BOOK_QUANTITY_BOOK_DATE,
	HISTORY,
	HISTORY_OVERRIDE,
	ADJUSTED_HISTORY,
	SIMULATION,
	BASELINE_FORECAST_$,
	BASELINE_FORECAST,
	BASE_OVERRIDDE,
	BOOK_QUANTITY_BOOK_DATE_$,
	HISTORY_$,
	FINAL_FORECAST_$,
	CHANGE_TO_BASE,
	MANUAL_STAT,
	CONSENSUS_FORECAST,
	ADJUSTED_HISTORY_$,
	BASE_FORECAST_$,
	FORECAST_FLAG,
	HOT_BUDGET_VALUE_REVIEW_1,
	HOT_BUDGET_VALUE_REVIEW_2,
	HOT_FUTURE_ORDERS,
	HOT_FUTURE_ORDERS_$,
	HOT_WTD_SHIP,
	ONE_MONTH_LAG_FCST,
	TWO_MONTH_LAG_FCST,
	THREE_MONTH_LAG_FCST,
	FOUR_MONTH_LAG_FCST,
	HOT_HYPERION_UNITS,
	HOT_HYPERION_BUDGET,
	HOT_BUDGET_VALUE_REVIEW_3,
	HOT_HYPERION_UNITS_REV1,
	HOT_HYPERION_UNITS_REV2,
	HOT_HYPERION_UNITS_REV3,
	HOT_HYPERION_BUDGET_REV1,
	HOT_HYPERION_BUDGET_REV_2,
	HOT_HYPERION_BUDGET_REV3,
	HOT_HYPERION_COGS_REV1,
	HOT_HYPERION_COGS_REV2,
	HOT_HYPERION_COGS_REV3,
	FIVE_MONTH_LAG_FCST,
	SIX_MONTH_LAG_FCST,
	SEVEN_MONTH_LAG_FCST,
	EIGHT_MONTH_LAG_FCST,
	NINE_MONTH_LAG_FCST,
	TEN_MONTH_LAG_FCST,
	ELEVEN_MONTH_LAG_FCST,
	TWELVE_MONTH_LAG_FCST,
	HOT_ABC_FLAG,
	MAX_SALES_DATE,
	ONE_MONTH_LAG_BAT_FCST,
	TWO_MONTH_LAG_BAT_FCST,
	THREE_MONTH_LAG_BAT_FCST,
	FOUR_MONTH_LAG_BAT_FCST,
	THREE_MTH_ERROR_LAG_FCST,
	FOUR_MTH_ERROR_LAG_FCST,
	THREE_MTH_ERROR_LAG_BAT_FCST,
	FOUR_MTH_ERROR_LAG_BAT_FCST,
	HOT_EST_LIST_PRICE,
	ONE_MTH_ERROR_LAG_FCST,
	DISP_FCST_LAG_1,
	DISP_FCST_LAG_2,
	DISP_FCST_LAG_3,
	DISP_FCST_LAG_4,
	DISP_FCST_LAG_5,
	DISP_FCST_LAG_6,
	DISP_FCST_LAG_7,
	DISP_FCST_LAG_8,
	DISP_FCST_LAG_9,
	DISP_FCST_LAG_10,
	DISP_FCST_LAG_11,
	DISP_FCST_LAG_12,
	PERIOD_DIFF,
	CURRENCY_CODE,
	FORECAST_FLAG_OVERRIDE,
	ONE_MONTH_LAG_FCST_$,
	TWO_MONTH_LAG_FCST_$,
	THREE_MONTH_LAG_FCST_$,
	FOUR_MONTH_LAG_FCST_$,
	CUSTOMER_ACCOUNT_WID,
	CUSTOMER_WID,
	INT_ORG_WID,
	ITEM_ORG_ID,
	DEMAND_CLASS,
	UPLIFT_FUTURE,
	INTEGRATION_ID,
	PRODUCT_WID,
	INVENTORY_PRODUCT_WID,
	GL_SEGMENT1_WID,
	GL_SEGMENT4_WID,
	GL_SEGMENT7_WID,
	GL_SEGMENT8_WID,
	GL_SEGMENT2_WID,
	ONE_MONTH_LAG_FCST_DOL,
	GL_SEGMENT3_WID,
	HOT_UNCONSTRAINED_DEMAND,
	HOT_UNCONSTRAINED_DEMAND_$,
	INVOICE_PRICE_OVERRIDE   
  ,#BIAPPS.DATASOURCE_NUM_ID 
FROM (	


select 	
	C1_ITEM_ID ITEM_ID,
	C2_LOCATION_ID LOCATION_ID,
	NVL(W_MCAL_DAY_D.ROW_WID,0) SALES_DATE_WID,
	C3_SALES_DATE SALES_DATE,
	C4_LAST_YEAR_SALES LAST_YEAR_SALES,
	C5_ACTUAL_QTY ACTUAL_QTY,
	C6_ACTUALS_TOTAL_VALUE ACTUALS_TOTAL_VALUE,
	C7_COGS_SD COGS_SD,
	C8_SALES_BASE_OVERRID SALES_BASE_OVERRID,
	C9_BUDGET_VALUE BUDGET_VALUE,
	C10_INVOICE_PRICE_SD INVOICE_PRICE_SD,
	C11_LAST_YEAR_SALES_DLR LAST_YEAR_SALES_DLR,
	C12_BASE_FORECAST BASE_FORECAST,
	C13_INCREMENTAL_FORECAST INCREMENTAL_FORECAST,
	C14_TOTAL_SALES_FORECAST TOTAL_SALES_FORECAST,
	C15_SALES_PROJ_VOL SALES_PROJ_VOL,
	C16_SALES_PROJ_VALUE SALES_PROJ_VALUE,
	C17_VOLUME_BASE_FUTURE VOLUME_BASE_FUTURE,
	C18_VOLUME_BASE_FUTURE_VALUE VOLUME_BASE_FUTURE_VALUE,
	C19_FINAL_FORECAST FINAL_FORECAST,
	C20_CONSENSUS_FORECAST_VALUE CONSENSUS_FORECAST_VALUE,
	C21_LAST_UPDATE_DATE LAST_UPDATE_DATE,
	C22_ACTUAL_TTL_VALUE ACTUAL_TTL_VALUE,
	C23_BOOK_QUANTITY_BOOK_DATE BOOK_QUANTITY_BOOK_DATE,
	C24_HISTORY HISTORY,
	C25_HISTORY_OVERRIDE HISTORY_OVERRIDE,
	C26_ADJUSTED_HISTORY ADJUSTED_HISTORY,
	C27_SIMULATION SIMULATION,
	C28_BASELINE_FORECAST__ BASELINE_FORECAST_$,
	C29_BASELINE_FORECAST BASELINE_FORECAST,
	C30_BASE_OVERRIDDE BASE_OVERRIDDE,
	C31_BOOK_QUANTITY_BOOK_DATE__ BOOK_QUANTITY_BOOK_DATE_$,
	C32_HISTORY__ HISTORY_$,
	C33_FINAL_FORECAST__ FINAL_FORECAST_$,
	C34_CHANGE_TO_BASE CHANGE_TO_BASE,
	C35_MANUAL_STAT MANUAL_STAT,
	C36_CONSENSUS_FORECAST CONSENSUS_FORECAST,
	C37_ADJUSTED_HISTORY__ ADJUSTED_HISTORY_$,
	C38_BASE_FORECAST__ BASE_FORECAST_$,
	C39_FORECAST_FLAG FORECAST_FLAG,
	C40_HOT_BUDGET_VALUE_REVIEW_1 HOT_BUDGET_VALUE_REVIEW_1,
	C41_HOT_BUDGET_VALUE_REVIEW_2 HOT_BUDGET_VALUE_REVIEW_2,
	C42_HOT_FUTURE_ORDERS HOT_FUTURE_ORDERS,
	C43_HOT_FUTURE_ORDERS__ HOT_FUTURE_ORDERS_$,
	C44_HOT_WTD_SHIP HOT_WTD_SHIP,
	C45_ONE_MONTH_LAG_FCST ONE_MONTH_LAG_FCST,
	C46_TWO_MONTH_LAG_FCST TWO_MONTH_LAG_FCST,
	C47_THREE_MONTH_LAG_FCST THREE_MONTH_LAG_FCST,
	C48_FOUR_MONTH_LAG_FCST FOUR_MONTH_LAG_FCST,
	C49_HOT_HYPERION_UNITS HOT_HYPERION_UNITS,
	C50_HOT_HYPERION_BUDGET HOT_HYPERION_BUDGET,
	C51_HOT_BUDGET_VALUE_REVIEW_3 HOT_BUDGET_VALUE_REVIEW_3,
	C52_HOT_HYPERION_UNITS_REV1 HOT_HYPERION_UNITS_REV1,
	C53_HOT_HYPERION_UNITS_REV2 HOT_HYPERION_UNITS_REV2,
	C54_HOT_HYPERION_UNITS_REV3 HOT_HYPERION_UNITS_REV3,
	C55_HOT_HYPERION_BUDGET_REV1 HOT_HYPERION_BUDGET_REV1,
	C56_HOT_HYPERION_BUDGET_REV_2 HOT_HYPERION_BUDGET_REV_2,
	C57_HOT_HYPERION_BUDGET_REV3 HOT_HYPERION_BUDGET_REV3,
	C58_HOT_HYPERION_COGS_REV1 HOT_HYPERION_COGS_REV1,
	C59_HOT_HYPERION_COGS_REV2 HOT_HYPERION_COGS_REV2,
	C60_HOT_HYPERION_COGS_REV3 HOT_HYPERION_COGS_REV3,
	C61_FIVE_MONTH_LAG_FCST FIVE_MONTH_LAG_FCST,
	C62_SIX_MONTH_LAG_FCST SIX_MONTH_LAG_FCST,
	C63_SEVEN_MONTH_LAG_FCST SEVEN_MONTH_LAG_FCST,
	C64_EIGHT_MONTH_LAG_FCST EIGHT_MONTH_LAG_FCST,
	C65_NINE_MONTH_LAG_FCST NINE_MONTH_LAG_FCST,
	C66_TEN_MONTH_LAG_FCST TEN_MONTH_LAG_FCST,
	C67_ELEVEN_MONTH_LAG_FCST ELEVEN_MONTH_LAG_FCST,
	C68_TWELVE_MONTH_LAG_FCST TWELVE_MONTH_LAG_FCST,
	C69_HOT_ABC_FLAG HOT_ABC_FLAG,
	C70_MAX_SALES_DATE MAX_SALES_DATE,
	C71_ONE_MONTH_LAG_BAT_FCST ONE_MONTH_LAG_BAT_FCST,
	C72_TWO_MONTH_LAG_BAT_FCST TWO_MONTH_LAG_BAT_FCST,
	C73_THREE_MONTH_LAG_BAT_FCST THREE_MONTH_LAG_BAT_FCST,
	C74_FOUR_MONTH_LAG_BAT_FCST FOUR_MONTH_LAG_BAT_FCST,
	C75_THREE_MTH_ERROR_LAG_FCST THREE_MTH_ERROR_LAG_FCST,
	C76_FOUR_MTH_ERROR_LAG_FCST FOUR_MTH_ERROR_LAG_FCST,
	C77_THREE_MTH_ERROR_LAG_BAT_FC THREE_MTH_ERROR_LAG_BAT_FCST,
	C78_FOUR_MTH_ERROR_LAG_BAT_FCS FOUR_MTH_ERROR_LAG_BAT_FCST,
	C79_HOT_EST_LIST_PRICE HOT_EST_LIST_PRICE,
	C80_ONE_MTH_ERROR_LAG_FCST ONE_MTH_ERROR_LAG_FCST,
	C81_DISP_FCST_LAG_1 DISP_FCST_LAG_1,
	C82_DISP_FCST_LAG_2 DISP_FCST_LAG_2,
	C83_DISP_FCST_LAG_3 DISP_FCST_LAG_3,
	C84_DISP_FCST_LAG_4 DISP_FCST_LAG_4,
	C85_DISP_FCST_LAG_5 DISP_FCST_LAG_5,
	C86_DISP_FCST_LAG_6 DISP_FCST_LAG_6,
	C87_DISP_FCST_LAG_7 DISP_FCST_LAG_7,
	C88_DISP_FCST_LAG_8 DISP_FCST_LAG_8,
	C89_DISP_FCST_LAG_9 DISP_FCST_LAG_9,
	C90_DISP_FCST_LAG_10 DISP_FCST_LAG_10,
	C91_DISP_FCST_LAG_11 DISP_FCST_LAG_11,
	C92_DISP_FCST_LAG_12 DISP_FCST_LAG_12,
	C93_PERIOD_DIFF PERIOD_DIFF,
	C94_CURRENCY_CODE CURRENCY_CODE,
	C95_FORECAST_FLAG_OVERRIDE FORECAST_FLAG_OVERRIDE,
	C96_ONE_MONTH_LAG_FCST__ ONE_MONTH_LAG_FCST_$,
	C97_TWO_MONTH_LAG_FCST__ TWO_MONTH_LAG_FCST_$,
	C98_THREE_MONTH_LAG_FCST__ THREE_MONTH_LAG_FCST_$,
	C99_FOUR_MONTH_LAG_FCST__ FOUR_MONTH_LAG_FCST_$,
	NVL(W_CUSTOMER_ACCOUNT_D.ROW_WID,0) CUSTOMER_ACCOUNT_WID,
	NVL(W_PARTY_D.ROW_WID,0) CUSTOMER_WID,
	NVL(W_INT_ORG_D.ROW_WID,0) INT_ORG_WID,
	C100_ITEM_ORG_ID ITEM_ORG_ID,
	C101_DEMAND_CLASS DEMAND_CLASS,
	C102_UPLIFT_FUTURE UPLIFT_FUTURE,
	C103_INTEGRATION_ID INTEGRATION_ID,
	NVL(W_PRODUCT_D.ROW_WID,0) PRODUCT_WID,
	NVL(W_INVENTORY_PRODUCT_D.ROW_WID,0) INVENTORY_PRODUCT_WID,
	NVL(BU_SEG1.SCD1_WID,0) GL_SEGMENT1_WID,
	NVL(LOC_SEG4.SCD1_WID,0) GL_SEGMENT4_WID,
	NVL(BRAND_SEG7.SCD1_WID,0) GL_SEGMENT7_WID,
	NVL(PRODUCT_LINE_SEG8.SCD1_WID,0) GL_SEGMENT8_WID,
	W_GL_SEGMENT_D.SCD1_WID GL_SEGMENT2_WID,
	C104_ONE_MONTH_LAG_FCST_DOL ONE_MONTH_LAG_FCST_DOL,
	NVL(W_GL_SEGMENT_D1.SCD1_WID,0) GL_SEGMENT3_WID,
	C105_HOT_UNCONSTRAINED_DEMAND HOT_UNCONSTRAINED_DEMAND,
	C106_HOT_UNCONSTRAINED_DEMAND_ HOT_UNCONSTRAINED_DEMAND_$,
	C107_INVOICE_PRICE_OVERRIDE INVOICE_PRICE_OVERRIDE 
from	BI11G_DW.W_PARTY_D   W_PARTY_D, BI11G_DW.W_CUSTOMER_ACCOUNT_D   W_CUSTOMER_ACCOUNT_D, BI11G_DW.W_INT_ORG_D   W_INT_ORG_D, BI11G_DW.W_PRODUCT_D   W_PRODUCT_D, BI11G_DW.W_MCAL_DAY_D   W_MCAL_DAY_D, BI11G_DW.W_INVENTORY_PRODUCT_D   W_INVENTORY_PRODUCT_D, BI11G_DW.W_GL_ACCOUNT_D   W_GL_ACCOUNT_D, BI11G_DW.W_GL_SEGMENT_D   BRAND_SEG7, BI11G_DW.W_GL_SEGMENT_D   PRODUCT_LINE_SEG8, BI11G_DW.W_GL_ACCOUNT_D   W_GL_ACCOUNT_D1, BI11G_DW.W_GL_SEGMENT_D   BU_SEG1, BI11G_DW.W_GL_SEGMENT_D   LOC_SEG4, BI11G_DW.W_GL_SEGMENT_D   W_GL_SEGMENT_D, BI11G_DW.W_GL_SEGMENT_D   W_GL_SEGMENT_D1, BI11G_DW.C$_4913676864_1_0
where		(1=1)	
 And (W_GL_ACCOUNT_D.ACCOUNT_SEG7_INTEGRATION_ID=BRAND_SEG7.INTEGRATION_ID (+))
AND (C108_SALES_ACCOUNT=W_GL_ACCOUNT_D.INTEGRATION_ID (+))
AND (W_GL_ACCOUNT_D.ACCOUNT_SEG8_INTEGRATION_ID=PRODUCT_LINE_SEG8.INTEGRATION_ID (+))
AND (W_GL_ACCOUNT_D1.INTEGRATION_ID (+)=W_CUSTOMER_ACCOUNT_D.X_GL_ID_REV)
AND (BU_SEG1.INTEGRATION_ID (+)=W_GL_ACCOUNT_D1.ACCOUNT_SEG1_INTEGRATION_ID)
AND (LOC_SEG4.INTEGRATION_ID (+)=W_GL_ACCOUNT_D1.ACCOUNT_SEG4_INTEGRATION_ID)
AND (W_GL_ACCOUNT_D.ACCOUNT_SEG2_INTEGRATION_ID=W_GL_SEGMENT_D.INTEGRATION_ID (+))
AND (W_GL_SEGMENT_D1.SEGMENT_VAL_CODE (+)=(CASE WHEN 
W_CUSTOMER_ACCOUNT_D.X_CUSTOMER_GROUP = 'PROFESSIONAL BEAUTY UK' THEN '20'
WHEN
W_CUSTOMER_ACCOUNT_D.X_CUSTOMER_GROUP = 'AMAZON EU SARL OXO UK' THEN '32'
ELSE '10'
END))
AND (W_PARTY_D.INTEGRATION_ID (+)=W_CUSTOMER_ACCOUNT_D.PARTY_ID)
AND (W_INT_ORG_D.INTEGRATION_ID (+)=C109_ORG_ID)
AND (W_CUSTOMER_ACCOUNT_D.INTEGRATION_ID (+)=C110_CUSTOMER_ACCOUNT_ID)
AND (C111_INVENTORY_ITEM_ID=W_PRODUCT_D.INTEGRATION_ID (+))
AND (C3_SALES_DATE=W_MCAL_DAY_D.MCAL_DAY_DT(+))
AND (W_INVENTORY_PRODUCT_D.INTEGRATION_ID (+)=(C111_INVENTORY_ITEM_ID||'~'||C109_ORG_ID))
And (W_INVENTORY_PRODUCT_D.CURRENT_FLG (+)='Y')
 And (W_PRODUCT_D.CURRENT_FLG (+)='Y')
 And (W_GL_SEGMENT_D1.X_SEGMENT_LOV_NAME (+)='HOT Channel')
 And (W_MCAL_DAY_D.MCAL_CAL_NAME='HOT Calendar')
 And (W_MCAL_DAY_D.ADJUSTMENT_PERIOD_FLG='N')




)    ODI_GET_FROM








 

